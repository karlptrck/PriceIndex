{
  "SolidityCompilerVersion": "0.4.25",
  "SourceFileMaps": [
    {
      "IndexHtmlFilePath": "../index.html",
      "SolidityCompilerVersion": "0.4.25",
      "SourceFileIndex": 2,
      "SourceFilePath": "PriceIndex.sol",
      "SourceFileName": "PriceIndex.sol",
      "SourceFileDirectory": "",
      "SourceHashSha256": "95F44978BDB9BB392F249627D9F0B91C056E3CA311DB91E00E56D3F8475B0360",
      "SourceFileLines": [
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 1,
          "LiteralSourceCodeLine": "/* ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 0,
          "OffsetEnd": 3,
          "Length": 3
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 2,
          "LiteralSourceCodeLine": "Copyright 2019 Novera Capital Inc.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 4,
          "OffsetEnd": 38,
          "Length": 34
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 3,
          "LiteralSourceCodeLine": "Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 39,
          "OffsetEnd": 471,
          "Length": 432
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 4,
          "LiteralSourceCodeLine": "The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 472,
          "OffsetEnd": 598,
          "Length": 126
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 5,
          "LiteralSourceCodeLine": "THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 599,
          "OffsetEnd": 1059,
          "Length": 460
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 6,
          "LiteralSourceCodeLine": "*/",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1060,
          "OffsetEnd": 1062,
          "Length": 2
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 7,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1063,
          "OffsetEnd": 1063,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 8,
          "LiteralSourceCodeLine": "pragma solidity ^0.4.24;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1064,
          "OffsetEnd": 1088,
          "Length": 24
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 9,
          "LiteralSourceCodeLine": "import \"./SafeMath.sol\"; //openzeppelin",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1089,
          "OffsetEnd": 1128,
          "Length": 39
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 10,
          "LiteralSourceCodeLine": "import \"./Ownable.sol\"; //openzeppelin",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1129,
          "OffsetEnd": 1167,
          "Length": 38
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 11,
          "LiteralSourceCodeLine": "import \"./Fund.sol\";",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1168,
          "OffsetEnd": 1188,
          "Length": 20
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 12,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1189,
          "OffsetEnd": 1189,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 13,
          "LiteralSourceCodeLine": "/// @title Novera Price Index",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1190,
          "OffsetEnd": 1219,
          "Length": 29
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 14,
          "LiteralSourceCodeLine": "/// @author Jose Miguel Herrera",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1220,
          "OffsetEnd": 1251,
          "Length": 31
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 15,
          "LiteralSourceCodeLine": "/// @notice You can use this contract to create a price oracle for a financial asset. Prices come from N registered price agents and averaged.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1252,
          "OffsetEnd": 1394,
          "Length": 142
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 16,
          "LiteralSourceCodeLine": "/// @notice You can use this contract independently, or connected to a \"fund\" which reads the price and has an end price, at which the fund ends.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1395,
          "OffsetEnd": 1540,
          "Length": 145
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 17,
          "LiteralSourceCodeLine": "/// @dev With mythX static analysis, you get warning SWC-128 (DoS With Block Gas Limit) due to the looping over connectedFundAddresses in reportPrice(). Since adding new funds is not a user facing function, there is no DoS threat...",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1541,
          "OffsetEnd": 1773,
          "Length": 232
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 18,
          "LiteralSourceCodeLine": "/// @dev ... However, this means that there IS an upper ceiling on how many funds can be connected to one price index.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1774,
          "OffsetEnd": 1892,
          "Length": 118
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 19,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1893,
          "OffsetEnd": 1893,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 20,
          "LiteralSourceCodeLine": "contract PriceIndex is Ownable {    ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1894,
          "OffsetEnd": 1930,
          "Length": 36
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 21,
          "LiteralSourceCodeLine": "   string public baseTicker;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1931,
          "OffsetEnd": 1959,
          "Length": 28
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 22,
          "LiteralSourceCodeLine": "   string public quoteTicker; ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1960,
          "OffsetEnd": 1990,
          "Length": 30
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 23,
          "LiteralSourceCodeLine": "   mapping (address => FundInfo) public funds;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1991,
          "OffsetEnd": 2037,
          "Length": 46
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 24,
          "LiteralSourceCodeLine": "   address[] internal connectedFundAddresses;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2038,
          "OffsetEnd": 2083,
          "Length": 45
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 25,
          "LiteralSourceCodeLine": "   mapping (address => bool) internal isConnectedFund;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2084,
          "OffsetEnd": 2138,
          "Length": 54
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 26,
          "LiteralSourceCodeLine": "   uint256 public numberOfConnectedFunds;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2139,
          "OffsetEnd": 2180,
          "Length": 41
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 27,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2181,
          "OffsetEnd": 2181,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 28,
          "LiteralSourceCodeLine": "   using SafeMath for uint;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2182,
          "OffsetEnd": 2209,
          "Length": 27
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 29,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2210,
          "OffsetEnd": 2210,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 30,
          "LiteralSourceCodeLine": "   uint256 public masterPrice;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2211,
          "OffsetEnd": 2241,
          "Length": 30
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 31,
          "LiteralSourceCodeLine": "   address[] internal registeredPriceAgents;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2242,
          "OffsetEnd": 2286,
          "Length": 44
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 32,
          "LiteralSourceCodeLine": "   uint256 public numberOfRegisteredPriceAgents;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2287,
          "OffsetEnd": 2335,
          "Length": 48
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 33,
          "LiteralSourceCodeLine": "   uint256 public maxNumberPriceAgents;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2336,
          "OffsetEnd": 2375,
          "Length": 39
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 34,
          "LiteralSourceCodeLine": "   uint256 public decimals;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2376,
          "OffsetEnd": 2403,
          "Length": 27
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 35,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2404,
          "OffsetEnd": 2404,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 36,
          "LiteralSourceCodeLine": "   mapping (address => bool) internal isRegisteredPriceAgent;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2405,
          "OffsetEnd": 2466,
          "Length": 61
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 37,
          "LiteralSourceCodeLine": "   mapping (address => priceReport) public PriceAgentReports;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2467,
          "OffsetEnd": 2528,
          "Length": 61
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 38,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2529,
          "OffsetEnd": 2529,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 39,
          "LiteralSourceCodeLine": "   event LogPriceUpdate(uint256 _newPrice, uint256 timestamp);",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2530,
          "OffsetEnd": 2592,
          "Length": 62
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 40,
          "LiteralSourceCodeLine": "   event changeInPriceAgents(uint _newNumberOfPriceAgents,address changer);",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2593,
          "OffsetEnd": 2668,
          "Length": 75
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 41,
          "LiteralSourceCodeLine": "   event fundEndAlert(uint256 timestamp, uint256 endPrice, address fundAddress);",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2669,
          "OffsetEnd": 2749,
          "Length": 80
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 42,
          "LiteralSourceCodeLine": "   ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2750,
          "OffsetEnd": 2753,
          "Length": 3
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 43,
          "LiteralSourceCodeLine": "    /// @notice Creates a PriceIndex instance.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2754,
          "OffsetEnd": 2800,
          "Length": 46
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 44,
          "LiteralSourceCodeLine": "    /// @dev In the future, both the asset name and the currency used to track it will be included as parameters.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2801,
          "OffsetEnd": 2914,
          "Length": 113
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 45,
          "LiteralSourceCodeLine": "    /// @param initialPrice The initial price of the asset.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2915,
          "OffsetEnd": 2974,
          "Length": 59
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 46,
          "LiteralSourceCodeLine": "    /// @param initialPriceSource Where initialPrice is coming from.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2975,
          "OffsetEnd": 3043,
          "Length": 68
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 47,
          "LiteralSourceCodeLine": "    /// @param _maxNumberPriceAgents The max nnumber of price agents this price index will allow.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 3044,
          "OffsetEnd": 3141,
          "Length": 97
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 48,
          "LiteralSourceCodeLine": "    /// @param _decimals The decimal precision used to represent the price of the asset. ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 3142,
          "OffsetEnd": 3231,
          "Length": 89
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 49,
          "LiteralSourceCodeLine": "    constructor(uint256 initialPrice, string initialPriceSource, uint _maxNumberPriceAgents,uint256 _decimals, string _baseTicker, string _quoteTicker) public {",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 3232,
          "OffsetEnd": 3392,
          "Length": 160
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 50,
          "LiteralSourceCodeLine": "       numberOfRegisteredPriceAgents=0;",
          "ExecutionCount": 28,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 3393,
          "OffsetEnd": 3432,
          "Length": 39
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 51,
          "LiteralSourceCodeLine": "       maxNumberPriceAgents=_maxNumberPriceAgents;",
          "ExecutionCount": 28,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 3433,
          "OffsetEnd": 3483,
          "Length": 50
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 52,
          "LiteralSourceCodeLine": "       registerPriceAgent(msg.sender);",
          "ExecutionCount": 28,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 3484,
          "OffsetEnd": 3522,
          "Length": 38
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 53,
          "LiteralSourceCodeLine": "       PriceAgentReports[msg.sender]=priceReport(initialPrice,now,initialPriceSource);",
          "ExecutionCount": 28,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 3523,
          "OffsetEnd": 3609,
          "Length": 86
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 54,
          "LiteralSourceCodeLine": "       masterPrice=initialPrice;",
          "ExecutionCount": 28,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 3610,
          "OffsetEnd": 3642,
          "Length": 32
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 55,
          "LiteralSourceCodeLine": "       numberOfConnectedFunds=0;",
          "ExecutionCount": 28,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 3643,
          "OffsetEnd": 3675,
          "Length": 32
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 56,
          "LiteralSourceCodeLine": "       decimals=_decimals;",
          "ExecutionCount": 28,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 3676,
          "OffsetEnd": 3702,
          "Length": 26
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 57,
          "LiteralSourceCodeLine": "       baseTicker=_baseTicker;",
          "ExecutionCount": 28,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 3703,
          "OffsetEnd": 3733,
          "Length": 30
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 58,
          "LiteralSourceCodeLine": "       quoteTicker=_quoteTicker;",
          "ExecutionCount": 28,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 3734,
          "OffsetEnd": 3766,
          "Length": 32
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 59,
          "LiteralSourceCodeLine": "       emit LogPriceUpdate(masterPrice,now);",
          "ExecutionCount": 28,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 3767,
          "OffsetEnd": 3811,
          "Length": 44
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 60,
          "LiteralSourceCodeLine": "    }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 3812,
          "OffsetEnd": 3817,
          "Length": 5
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 61,
          "LiteralSourceCodeLine": "    ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 3818,
          "OffsetEnd": 3822,
          "Length": 4
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 62,
          "LiteralSourceCodeLine": "    /// @notice Connects a Fund to this price index - the fund starts tracking it.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 3823,
          "OffsetEnd": 3905,
          "Length": 82
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 63,
          "LiteralSourceCodeLine": "    /// @notice Only callable by the contract owner.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 3906,
          "OffsetEnd": 3958,
          "Length": 52
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 64,
          "LiteralSourceCodeLine": "    /// @dev Right now there's no way to disconnect a fund, this feature could be added in the future.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 3959,
          "OffsetEnd": 4061,
          "Length": 102
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 65,
          "LiteralSourceCodeLine": "    /// @param fundAddress The address of the fund being created.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 4062,
          "OffsetEnd": 4127,
          "Length": 65
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 66,
          "LiteralSourceCodeLine": "    function connectFund(address fundAddress) public onlyOwner {",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 4128,
          "OffsetEnd": 4192,
          "Length": 64
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 67,
          "LiteralSourceCodeLine": "        require(fundAddress!=0);",
          "ExecutionCount": 12,
          "IsCovered": true,
          "BranchState": "both",
          "BranchType": "require",
          "IsBranch": true,
          "Offset": 4193,
          "OffsetEnd": 4225,
          "Length": 32
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 68,
          "LiteralSourceCodeLine": "        require(!isConnectedFund[fundAddress]);",
          "ExecutionCount": 11,
          "IsCovered": true,
          "BranchState": "both",
          "BranchType": "require",
          "IsBranch": true,
          "Offset": 4226,
          "OffsetEnd": 4273,
          "Length": 47
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 69,
          "LiteralSourceCodeLine": "        require(Fund(fundAddress).decimals()==decimals);",
          "ExecutionCount": 10,
          "IsCovered": true,
          "BranchState": "both",
          "BranchType": "require",
          "IsBranch": true,
          "Offset": 4274,
          "OffsetEnd": 4330,
          "Length": 56
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 70,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 4331,
          "OffsetEnd": 4331,
          "Length": 0
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 71,
          "LiteralSourceCodeLine": "        isConnectedFund[fundAddress]=true;",
          "ExecutionCount": 9,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 4332,
          "OffsetEnd": 4374,
          "Length": 42
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 72,
          "LiteralSourceCodeLine": "        ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 4375,
          "OffsetEnd": 4383,
          "Length": 8
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 73,
          "LiteralSourceCodeLine": "        connectedFundAddresses.push(fundAddress);",
          "ExecutionCount": 9,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 4384,
          "OffsetEnd": 4433,
          "Length": 49
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 74,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 4434,
          "OffsetEnd": 4434,
          "Length": 0
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 75,
          "LiteralSourceCodeLine": "        funds[fundAddress]=FundInfo(Fund(fundAddress),false,0,0);",
          "ExecutionCount": 9,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 4435,
          "OffsetEnd": 4500,
          "Length": 65
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 76,
          "LiteralSourceCodeLine": "        funds[fundAddress].strikePrice=funds[fundAddress].fund.strikePrice();",
          "ExecutionCount": 9,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 4501,
          "OffsetEnd": 4578,
          "Length": 77
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 77,
          "LiteralSourceCodeLine": "        ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 4579,
          "OffsetEnd": 4587,
          "Length": 8
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 78,
          "LiteralSourceCodeLine": "        numberOfConnectedFunds=numberOfConnectedFunds.add(1);",
          "ExecutionCount": 9,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 4588,
          "OffsetEnd": 4649,
          "Length": 61
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 79,
          "LiteralSourceCodeLine": "        ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 4650,
          "OffsetEnd": 4658,
          "Length": 8
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 80,
          "LiteralSourceCodeLine": "        //what if new connected fund here has reached max conditions already??",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 4659,
          "OffsetEnd": 4737,
          "Length": 78
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 81,
          "LiteralSourceCodeLine": "        if(reachedMaxConditions(fundAddress)){",
          "ExecutionCount": 9,
          "IsCovered": true,
          "BranchState": "both",
          "BranchType": "if_statement",
          "IsBranch": true,
          "Offset": 4738,
          "OffsetEnd": 4784,
          "Length": 46
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 82,
          "LiteralSourceCodeLine": "            handleMaxConditionForFund(fundAddress);",
          "ExecutionCount": 1,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 4785,
          "OffsetEnd": 4836,
          "Length": 51
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 83,
          "LiteralSourceCodeLine": "        }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 4837,
          "OffsetEnd": 4846,
          "Length": 9
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 84,
          "LiteralSourceCodeLine": "        ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 4847,
          "OffsetEnd": 4855,
          "Length": 8
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 85,
          "LiteralSourceCodeLine": "    }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 4856,
          "OffsetEnd": 4861,
          "Length": 5
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 86,
          "LiteralSourceCodeLine": "    ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 4862,
          "OffsetEnd": 4866,
          "Length": 4
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 87,
          "LiteralSourceCodeLine": "    /// @notice Retrieves the address of one of the connected funds.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 4867,
          "OffsetEnd": 4935,
          "Length": 68
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 88,
          "LiteralSourceCodeLine": "    /// @param index The index of the Ith connected fund.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 4936,
          "OffsetEnd": 4993,
          "Length": 57
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 89,
          "LiteralSourceCodeLine": "    /// @return The address of the Ith connected fund.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 4994,
          "OffsetEnd": 5048,
          "Length": 54
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 90,
          "LiteralSourceCodeLine": "    function getConnectedFundAddress(uint index) view public returns(address) {",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 5049,
          "OffsetEnd": 5128,
          "Length": 79
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 91,
          "LiteralSourceCodeLine": "        if(numberOfConnectedFunds==0 || index>connectedFundAddresses.length.sub(1)){",
          "ExecutionCount": 4,
          "IsCovered": true,
          "BranchState": "both",
          "BranchType": "if_statement",
          "IsBranch": true,
          "Offset": 5129,
          "OffsetEnd": 5213,
          "Length": 84
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 92,
          "LiteralSourceCodeLine": "            return 0;",
          "ExecutionCount": 2,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 5214,
          "OffsetEnd": 5235,
          "Length": 21
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 93,
          "LiteralSourceCodeLine": "        }else{",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 5236,
          "OffsetEnd": 5250,
          "Length": 14
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 94,
          "LiteralSourceCodeLine": "            return connectedFundAddresses[index];",
          "ExecutionCount": 2,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 5251,
          "OffsetEnd": 5300,
          "Length": 49
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 95,
          "LiteralSourceCodeLine": "        }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 5301,
          "OffsetEnd": 5310,
          "Length": 9
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 96,
          "LiteralSourceCodeLine": "    }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 5311,
          "OffsetEnd": 5316,
          "Length": 5
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 97,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 5317,
          "OffsetEnd": 5317,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 98,
          "LiteralSourceCodeLine": "    /// @notice Retrieves the address of one of the registered price agents.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 5318,
          "OffsetEnd": 5394,
          "Length": 76
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 99,
          "LiteralSourceCodeLine": "    /// @param index The index of the Ith registered agent.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 5395,
          "OffsetEnd": 5454,
          "Length": 59
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 100,
          "LiteralSourceCodeLine": "    /// @return The address of the Ith registered agent.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 5455,
          "OffsetEnd": 5511,
          "Length": 56
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 101,
          "LiteralSourceCodeLine": "    function getRegisteredPriceAgent(uint index) view public returns(address) {",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 5512,
          "OffsetEnd": 5591,
          "Length": 79
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 102,
          "LiteralSourceCodeLine": "        if(numberOfRegisteredPriceAgents==0 || index>registeredPriceAgents.length.sub(1)){",
          "ExecutionCount": 6,
          "IsCovered": true,
          "BranchState": "both",
          "BranchType": "if_statement",
          "IsBranch": true,
          "Offset": 5592,
          "OffsetEnd": 5682,
          "Length": 90
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 103,
          "LiteralSourceCodeLine": "            return 0;",
          "ExecutionCount": 1,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 5683,
          "OffsetEnd": 5704,
          "Length": 21
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 104,
          "LiteralSourceCodeLine": "        }else{",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 5705,
          "OffsetEnd": 5719,
          "Length": 14
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 105,
          "LiteralSourceCodeLine": "            return registeredPriceAgents[index];",
          "ExecutionCount": 5,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 5720,
          "OffsetEnd": 5768,
          "Length": 48
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 106,
          "LiteralSourceCodeLine": "        }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 5769,
          "OffsetEnd": 5778,
          "Length": 9
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 107,
          "LiteralSourceCodeLine": "    }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 5779,
          "OffsetEnd": 5784,
          "Length": 5
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 108,
          "LiteralSourceCodeLine": "    ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 5785,
          "OffsetEnd": 5789,
          "Length": 4
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 109,
          "LiteralSourceCodeLine": "    /// @notice Retrieves the current price of the tracked asset.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 5790,
          "OffsetEnd": 5855,
          "Length": 65
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 110,
          "LiteralSourceCodeLine": "    /// @dev Designed for the use of a Fund contract (external requests), but can be used publically (would be the same as calling masterPrice())",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 5856,
          "OffsetEnd": 6001,
          "Length": 145
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 111,
          "LiteralSourceCodeLine": "    /// @return If called by Fund that has reached its end conditions, then returns the price that cuased the fund to end. Otherwise, returns CURRENT the price of the asset.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 6002,
          "OffsetEnd": 6175,
          "Length": 173
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 112,
          "LiteralSourceCodeLine": "    function getPrice() view public returns(uint256){",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 6176,
          "OffsetEnd": 6229,
          "Length": 53
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 113,
          "LiteralSourceCodeLine": "        //if I have a fund connected that has reached its end conditions, give it end price",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 6230,
          "OffsetEnd": 6321,
          "Length": 91
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 114,
          "LiteralSourceCodeLine": "        if(isConnectedFund[msg.sender] && funds[msg.sender].endPriceConditionsReached ){",
          "ExecutionCount": 19,
          "IsCovered": true,
          "BranchState": "else",
          "BranchType": "if_statement",
          "IsBranch": true,
          "Offset": 6322,
          "OffsetEnd": 6410,
          "Length": 88
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 115,
          "LiteralSourceCodeLine": "            return funds[msg.sender].endPrice;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 6411,
          "OffsetEnd": 6457,
          "Length": 46
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 116,
          "LiteralSourceCodeLine": "        }else{",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 6458,
          "OffsetEnd": 6472,
          "Length": 14
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 117,
          "LiteralSourceCodeLine": "            return masterPrice;",
          "ExecutionCount": 19,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 6473,
          "OffsetEnd": 6504,
          "Length": 31
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 118,
          "LiteralSourceCodeLine": "        }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 6505,
          "OffsetEnd": 6514,
          "Length": 9
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 119,
          "LiteralSourceCodeLine": "    }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 6515,
          "OffsetEnd": 6520,
          "Length": 5
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 120,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 6521,
          "OffsetEnd": 6521,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 121,
          "LiteralSourceCodeLine": "    /// @notice Updates current price of the tracked asset and handles the ending of funds.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 6522,
          "OffsetEnd": 6613,
          "Length": 91
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 122,
          "LiteralSourceCodeLine": "    /// @param reportedPrice The reported price.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 6614,
          "OffsetEnd": 6662,
          "Length": 48
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 123,
          "LiteralSourceCodeLine": "    /// @param reportedPriceSource Where reportedPrice comes from.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 6663,
          "OffsetEnd": 6729,
          "Length": 66
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 124,
          "LiteralSourceCodeLine": "    /// @dev Currently averages the prices, future improvement to moving averages possible.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 6730,
          "OffsetEnd": 6821,
          "Length": 91
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 125,
          "LiteralSourceCodeLine": "    /// @dev Analysis needs to be done on this function to see how gas usage increases with the growth of more connected fund addresses, as it may reach a point of self-inflicted DoS.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 6822,
          "OffsetEnd": 7005,
          "Length": 183
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 126,
          "LiteralSourceCodeLine": "    /// @dev The above is an argument for having the ability to DISCONNECT funds.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 7006,
          "OffsetEnd": 7087,
          "Length": 81
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 127,
          "LiteralSourceCodeLine": "    function reportPrice(uint256 reportedPrice,string reportedPriceSource ) public {",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 7088,
          "OffsetEnd": 7172,
          "Length": 84
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 128,
          "LiteralSourceCodeLine": "        require(isRegisteredPriceAgent[msg.sender]); //needs to be registered price agent",
          "ExecutionCount": 9,
          "IsCovered": true,
          "BranchState": "both",
          "BranchType": "require",
          "IsBranch": true,
          "Offset": 7173,
          "OffsetEnd": 7262,
          "Length": 89
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 129,
          "LiteralSourceCodeLine": "        PriceAgentReports[msg.sender]=priceReport(reportedPrice,now,reportedPriceSource);",
          "ExecutionCount": 8,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 7263,
          "OffsetEnd": 7352,
          "Length": 89
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 130,
          "LiteralSourceCodeLine": "        aggregatePrice();",
          "ExecutionCount": 8,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 7353,
          "OffsetEnd": 7378,
          "Length": 25
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 131,
          "LiteralSourceCodeLine": "        checkAndUpdateFunds();",
          "ExecutionCount": 8,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 7379,
          "OffsetEnd": 7409,
          "Length": 30
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 132,
          "LiteralSourceCodeLine": "    }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 7410,
          "OffsetEnd": 7415,
          "Length": 5
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 133,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 7416,
          "OffsetEnd": 7416,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 134,
          "LiteralSourceCodeLine": "    /// @dev Internal function used to check if the current price, newly updated, causes the end of a fund.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 7417,
          "OffsetEnd": 7524,
          "Length": 107
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 135,
          "LiteralSourceCodeLine": "    /// @param fundAddress The address of the fund that is being checked.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 7525,
          "OffsetEnd": 7598,
          "Length": 73
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 136,
          "LiteralSourceCodeLine": "    /// @return true if the current price has caused the fund to reach its max/end conditions. False otherwise.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 7599,
          "OffsetEnd": 7710,
          "Length": 111
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 137,
          "LiteralSourceCodeLine": "    function reachedMaxConditions(address fundAddress) internal view returns(bool){",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 7711,
          "OffsetEnd": 7794,
          "Length": 83
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 138,
          "LiteralSourceCodeLine": "        require(isConnectedFund[fundAddress]);",
          "ExecutionCount": 11,
          "IsCovered": true,
          "BranchState": "if",
          "BranchType": "require",
          "IsBranch": true,
          "Offset": 7795,
          "OffsetEnd": 7841,
          "Length": 46
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 139,
          "LiteralSourceCodeLine": "        //modified so that price index asks a particular fund if it has reached its custom max conditions.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 7842,
          "OffsetEnd": 7948,
          "Length": 106
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 140,
          "LiteralSourceCodeLine": "        return funds[fundAddress].fund.wouldReachEndConditions(masterPrice);",
          "ExecutionCount": 11,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 7949,
          "OffsetEnd": 8025,
          "Length": 76
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 141,
          "LiteralSourceCodeLine": "    }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 8026,
          "OffsetEnd": 8031,
          "Length": 5
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 142,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 8032,
          "OffsetEnd": 8032,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 143,
          "LiteralSourceCodeLine": "    /// @dev Internal function used to handle when a price update causes the end of a fund.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 8033,
          "OffsetEnd": 8124,
          "Length": 91
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 144,
          "LiteralSourceCodeLine": "    /// @param fundAddress The address of the fund that has ended due to a price update",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 8125,
          "OffsetEnd": 8212,
          "Length": 87
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 145,
          "LiteralSourceCodeLine": "    function handleMaxConditionForFund(address fundAddress) internal{",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 8213,
          "OffsetEnd": 8282,
          "Length": 69
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 146,
          "LiteralSourceCodeLine": "        emit fundEndAlert(now,masterPrice,fundAddress);",
          "ExecutionCount": 3,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 8283,
          "OffsetEnd": 8338,
          "Length": 55
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 147,
          "LiteralSourceCodeLine": "        funds[fundAddress].endPriceConditionsReached=true;",
          "ExecutionCount": 3,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 8339,
          "OffsetEnd": 8397,
          "Length": 58
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 148,
          "LiteralSourceCodeLine": "        funds[fundAddress].endPrice=masterPrice;",
          "ExecutionCount": 3,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 8398,
          "OffsetEnd": 8446,
          "Length": 48
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 149,
          "LiteralSourceCodeLine": "    }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 8447,
          "OffsetEnd": 8452,
          "Length": 5
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 150,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 8453,
          "OffsetEnd": 8453,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 151,
          "LiteralSourceCodeLine": "    /// @notice Checks if a connected fund has ended.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 8454,
          "OffsetEnd": 8507,
          "Length": 53
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 152,
          "LiteralSourceCodeLine": "    /// @param fundAddress The address of the fund that is going to be checked.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 8508,
          "OffsetEnd": 8587,
          "Length": 79
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 153,
          "LiteralSourceCodeLine": "    /// @return true if the fund has ended. false otherwise.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 8588,
          "OffsetEnd": 8648,
          "Length": 60
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 154,
          "LiteralSourceCodeLine": "    function hasFundEnded(address fundAddress) public view returns(bool){",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 8649,
          "OffsetEnd": 8722,
          "Length": 73
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 155,
          "LiteralSourceCodeLine": "        require(isConnectedFund[fundAddress]);",
          "ExecutionCount": 11,
          "IsCovered": true,
          "BranchState": "both",
          "BranchType": "require",
          "IsBranch": true,
          "Offset": 8723,
          "OffsetEnd": 8769,
          "Length": 46
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 156,
          "LiteralSourceCodeLine": "        return funds[fundAddress].endPriceConditionsReached;",
          "ExecutionCount": 10,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 8770,
          "OffsetEnd": 8830,
          "Length": 60
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 157,
          "LiteralSourceCodeLine": "    }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 8831,
          "OffsetEnd": 8836,
          "Length": 5
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 158,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 8837,
          "OffsetEnd": 8837,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 159,
          "LiteralSourceCodeLine": "    /// @notice Retrieves the price that caused a fund to end.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 8838,
          "OffsetEnd": 8900,
          "Length": 62
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 160,
          "LiteralSourceCodeLine": "    /// @param fundAddress The address of the fund that ended.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 8901,
          "OffsetEnd": 8963,
          "Length": 62
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 161,
          "LiteralSourceCodeLine": "    /// @return the price that caused the fund to end.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 8964,
          "OffsetEnd": 9018,
          "Length": 54
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 162,
          "LiteralSourceCodeLine": "    function getEndPrice(address fundAddress) public view returns(uint256){",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 9019,
          "OffsetEnd": 9094,
          "Length": 75
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 163,
          "LiteralSourceCodeLine": "        require(hasFundEnded(fundAddress));",
          "ExecutionCount": 1,
          "IsCovered": true,
          "BranchState": "if",
          "BranchType": "require",
          "IsBranch": true,
          "Offset": 9095,
          "OffsetEnd": 9138,
          "Length": 43
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 164,
          "LiteralSourceCodeLine": "        return funds[fundAddress].endPrice;",
          "ExecutionCount": 1,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 9139,
          "OffsetEnd": 9182,
          "Length": 43
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 165,
          "LiteralSourceCodeLine": "    }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 9183,
          "OffsetEnd": 9188,
          "Length": 5
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 166,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 9189,
          "OffsetEnd": 9189,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 167,
          "LiteralSourceCodeLine": "    /// @dev Only callable by a Fund contract (external request) that has reached its end conditions/has ended.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 9190,
          "OffsetEnd": 9301,
          "Length": 111
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 168,
          "LiteralSourceCodeLine": "    /// @dev Resets the end status of a fun and retreives the new strike price.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 9302,
          "OffsetEnd": 9381,
          "Length": 79
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 169,
          "LiteralSourceCodeLine": "    function resetFundStatus() public {",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 9382,
          "OffsetEnd": 9421,
          "Length": 39
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 170,
          "LiteralSourceCodeLine": "        require(isConnectedFund[msg.sender] && funds[msg.sender].endPriceConditionsReached);",
          "ExecutionCount": 1,
          "IsCovered": true,
          "BranchState": "else",
          "BranchType": "require",
          "IsBranch": true,
          "Offset": 9422,
          "OffsetEnd": 9514,
          "Length": 92
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 171,
          "LiteralSourceCodeLine": "        funds[msg.sender].endPriceConditionsReached=false;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 9515,
          "OffsetEnd": 9573,
          "Length": 58
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 172,
          "LiteralSourceCodeLine": "        funds[msg.sender].endPrice=0;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 9574,
          "OffsetEnd": 9611,
          "Length": 37
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 173,
          "LiteralSourceCodeLine": "        funds[msg.sender].strikePrice=funds[msg.sender].fund.strikePrice();",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 9612,
          "OffsetEnd": 9687,
          "Length": 75
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 174,
          "LiteralSourceCodeLine": "    }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 9688,
          "OffsetEnd": 9693,
          "Length": 5
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 175,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 9694,
          "OffsetEnd": 9694,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 176,
          "LiteralSourceCodeLine": "    /// @dev Internal function that retrieves all current price reports and averages them, updating the master price.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 9695,
          "OffsetEnd": 9812,
          "Length": 117
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 177,
          "LiteralSourceCodeLine": "    /// @dev This is where moving average functionality could be added instead of simple averaging.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 9813,
          "OffsetEnd": 9912,
          "Length": 99
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 178,
          "LiteralSourceCodeLine": "    /// @dev Warning: does not work if there are no valid (have reported a price) reports/agents. This is enforced in the removal of agents.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 9913,
          "OffsetEnd": 10053,
          "Length": 140
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 179,
          "LiteralSourceCodeLine": "    function aggregatePrice() private {",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 10054,
          "OffsetEnd": 10093,
          "Length": 39
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 180,
          "LiteralSourceCodeLine": "        uint256 aggPrice=0;",
          "ExecutionCount": 12,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 10094,
          "OffsetEnd": 10121,
          "Length": 27
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 181,
          "LiteralSourceCodeLine": "        uint256 numValidPrices=0;",
          "ExecutionCount": 12,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 10122,
          "OffsetEnd": 10155,
          "Length": 33
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 182,
          "LiteralSourceCodeLine": "        ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 10156,
          "OffsetEnd": 10164,
          "Length": 8
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 183,
          "LiteralSourceCodeLine": "        for (uint i=0; i<registeredPriceAgents.length; i=i.add(1)) {",
          "ExecutionCount": 12,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 10165,
          "OffsetEnd": 10233,
          "Length": 68
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 184,
          "LiteralSourceCodeLine": "            if(registeredPriceAgents[i]!=0 && PriceAgentReports[registeredPriceAgents[i]].timestamp!=0){",
          "ExecutionCount": 20,
          "IsCovered": true,
          "BranchState": "both",
          "BranchType": "if_statement",
          "IsBranch": true,
          "Offset": 10234,
          "OffsetEnd": 10338,
          "Length": 104
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 185,
          "LiteralSourceCodeLine": "                numValidPrices=numValidPrices.add(1);",
          "ExecutionCount": 13,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 10339,
          "OffsetEnd": 10392,
          "Length": 53
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 186,
          "LiteralSourceCodeLine": "                aggPrice=aggPrice.add(PriceAgentReports[registeredPriceAgents[i]].price);",
          "ExecutionCount": 13,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 10393,
          "OffsetEnd": 10482,
          "Length": 89
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 187,
          "LiteralSourceCodeLine": "            }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 10483,
          "OffsetEnd": 10496,
          "Length": 13
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 188,
          "LiteralSourceCodeLine": "        }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 10497,
          "OffsetEnd": 10506,
          "Length": 9
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 189,
          "LiteralSourceCodeLine": "        ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 10507,
          "OffsetEnd": 10515,
          "Length": 8
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 190,
          "LiteralSourceCodeLine": "        if(numValidPrices==0){ //THIS SHOULD NEVER HAPPEN, AND IS GUARANTEED BY THE REMOVE PRICE AGENT FUNC, THERE SHALL BE ALWAYS 1 AGENT",
          "ExecutionCount": 12,
          "IsCovered": true,
          "BranchState": "both",
          "BranchType": "if_statement",
          "IsBranch": true,
          "Offset": 10516,
          "OffsetEnd": 10654,
          "Length": 138
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 191,
          "LiteralSourceCodeLine": "            revert(\"Price cannot be aggregated because there are no valid prices.\");",
          "ExecutionCount": 2,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 10655,
          "OffsetEnd": 10739,
          "Length": 84
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 192,
          "LiteralSourceCodeLine": "        }else{",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 10740,
          "OffsetEnd": 10754,
          "Length": 14
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 193,
          "LiteralSourceCodeLine": "            aggPrice = aggPrice.div(numValidPrices);",
          "ExecutionCount": 10,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 10755,
          "OffsetEnd": 10807,
          "Length": 52
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 194,
          "LiteralSourceCodeLine": "        }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 10808,
          "OffsetEnd": 10817,
          "Length": 9
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 195,
          "LiteralSourceCodeLine": "        ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 10818,
          "OffsetEnd": 10826,
          "Length": 8
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 196,
          "LiteralSourceCodeLine": "        emit LogPriceUpdate(aggPrice,now);",
          "ExecutionCount": 10,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 10827,
          "OffsetEnd": 10869,
          "Length": 42
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 197,
          "LiteralSourceCodeLine": "        masterPrice=aggPrice;",
          "ExecutionCount": 10,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 10870,
          "OffsetEnd": 10899,
          "Length": 29
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 198,
          "LiteralSourceCodeLine": "    }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 10900,
          "OffsetEnd": 10905,
          "Length": 5
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 199,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 10906,
          "OffsetEnd": 10906,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 200,
          "LiteralSourceCodeLine": "    /// @dev Internal function that checks if the previous price update would end a fund, and triggers the end process ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 10907,
          "OffsetEnd": 11026,
          "Length": 119
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 201,
          "LiteralSourceCodeLine": "    function checkAndUpdateFunds() private {",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 11027,
          "OffsetEnd": 11071,
          "Length": 44
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 202,
          "LiteralSourceCodeLine": "        for (uint i=0; i<connectedFundAddresses.length; i=i.add(1)) {",
          "ExecutionCount": 8,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 11072,
          "OffsetEnd": 11141,
          "Length": 69
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 203,
          "LiteralSourceCodeLine": "            if(isConnectedFund[connectedFundAddresses[i]] && !hasFundEnded(connectedFundAddresses[i]) && reachedMaxConditions(connectedFundAddresses[i])){",
          "ExecutionCount": 3,
          "IsCovered": true,
          "BranchState": "both",
          "BranchType": "if_statement",
          "IsBranch": true,
          "Offset": 11142,
          "OffsetEnd": 11296,
          "Length": 154
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 204,
          "LiteralSourceCodeLine": "                handleMaxConditionForFund(connectedFundAddresses[i]);",
          "ExecutionCount": 2,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 11297,
          "OffsetEnd": 11366,
          "Length": 69
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 205,
          "LiteralSourceCodeLine": "            }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 11367,
          "OffsetEnd": 11380,
          "Length": 13
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 206,
          "LiteralSourceCodeLine": "        }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 11381,
          "OffsetEnd": 11390,
          "Length": 9
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 207,
          "LiteralSourceCodeLine": "    }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 11391,
          "OffsetEnd": 11396,
          "Length": 5
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 208,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 11397,
          "OffsetEnd": 11397,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 209,
          "LiteralSourceCodeLine": "    /// @notice Registers an address as a registered price agent for this price index.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 11398,
          "OffsetEnd": 11484,
          "Length": 86
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 210,
          "LiteralSourceCodeLine": "    /// @notice Only callable by the contract owner.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 11485,
          "OffsetEnd": 11537,
          "Length": 52
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 211,
          "LiteralSourceCodeLine": "    /// @param newAgent The address of the price agent to be registered.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 11538,
          "OffsetEnd": 11610,
          "Length": 72
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 212,
          "LiteralSourceCodeLine": "    function registerPriceAgent(address newAgent) public onlyOwner  {",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 11611,
          "OffsetEnd": 11680,
          "Length": 69
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 213,
          "LiteralSourceCodeLine": "        require(!isRegisteredPriceAgent[newAgent]); //prevent double registrations",
          "ExecutionCount": 42,
          "IsCovered": true,
          "BranchState": "both",
          "BranchType": "require",
          "IsBranch": true,
          "Offset": 11681,
          "OffsetEnd": 11763,
          "Length": 82
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 214,
          "LiteralSourceCodeLine": "        require(numberOfRegisteredPriceAgents<maxNumberPriceAgents); //no more than max",
          "ExecutionCount": 41,
          "IsCovered": true,
          "BranchState": "both",
          "BranchType": "require",
          "IsBranch": true,
          "Offset": 11764,
          "OffsetEnd": 11851,
          "Length": 87
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 215,
          "LiteralSourceCodeLine": "        isRegisteredPriceAgent[newAgent]=true;",
          "ExecutionCount": 40,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 11852,
          "OffsetEnd": 11898,
          "Length": 46
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 216,
          "LiteralSourceCodeLine": "        bool foundEmptySlot=false;",
          "ExecutionCount": 40,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 11899,
          "OffsetEnd": 11933,
          "Length": 34
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 217,
          "LiteralSourceCodeLine": "        ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 11934,
          "OffsetEnd": 11942,
          "Length": 8
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 218,
          "LiteralSourceCodeLine": "        for (uint i=0; i<registeredPriceAgents.length; i=i.add(1)) {",
          "ExecutionCount": 40,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 11943,
          "OffsetEnd": 12011,
          "Length": 68
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 219,
          "LiteralSourceCodeLine": "            if(registeredPriceAgents[i]==0){",
          "ExecutionCount": 18,
          "IsCovered": true,
          "BranchState": "both",
          "BranchType": "if_statement",
          "IsBranch": true,
          "Offset": 12012,
          "OffsetEnd": 12056,
          "Length": 44
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 220,
          "LiteralSourceCodeLine": "               registeredPriceAgents[i]=newAgent; //add agent in first free slot   ",
          "ExecutionCount": 1,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 12057,
          "OffsetEnd": 12140,
          "Length": 83
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 221,
          "LiteralSourceCodeLine": "               foundEmptySlot=true;",
          "ExecutionCount": 1,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 12141,
          "OffsetEnd": 12176,
          "Length": 35
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 222,
          "LiteralSourceCodeLine": "               break;",
          "ExecutionCount": 1,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 12177,
          "OffsetEnd": 12198,
          "Length": 21
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 223,
          "LiteralSourceCodeLine": "            }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 12199,
          "OffsetEnd": 12212,
          "Length": 13
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 224,
          "LiteralSourceCodeLine": "        }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 12213,
          "OffsetEnd": 12222,
          "Length": 9
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 225,
          "LiteralSourceCodeLine": "        ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 12223,
          "OffsetEnd": 12231,
          "Length": 8
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 226,
          "LiteralSourceCodeLine": "        if(!foundEmptySlot){",
          "ExecutionCount": 40,
          "IsCovered": true,
          "BranchState": "both",
          "BranchType": "if_statement",
          "IsBranch": true,
          "Offset": 12232,
          "OffsetEnd": 12260,
          "Length": 28
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 227,
          "LiteralSourceCodeLine": "            registeredPriceAgents.push(newAgent);",
          "ExecutionCount": 39,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 12261,
          "OffsetEnd": 12310,
          "Length": 49
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 228,
          "LiteralSourceCodeLine": "        }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 12311,
          "OffsetEnd": 12320,
          "Length": 9
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 229,
          "LiteralSourceCodeLine": "        ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 12321,
          "OffsetEnd": 12329,
          "Length": 8
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 230,
          "LiteralSourceCodeLine": "        ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 12330,
          "OffsetEnd": 12338,
          "Length": 8
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 231,
          "LiteralSourceCodeLine": "        numberOfRegisteredPriceAgents=numberOfRegisteredPriceAgents.add(1);",
          "ExecutionCount": 40,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 12339,
          "OffsetEnd": 12414,
          "Length": 75
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 232,
          "LiteralSourceCodeLine": "        emit changeInPriceAgents(numberOfRegisteredPriceAgents,msg.sender);",
          "ExecutionCount": 40,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 12415,
          "OffsetEnd": 12490,
          "Length": 75
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 233,
          "LiteralSourceCodeLine": "    }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 12491,
          "OffsetEnd": 12496,
          "Length": 5
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 234,
          "LiteralSourceCodeLine": "    ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 12497,
          "OffsetEnd": 12501,
          "Length": 4
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 235,
          "LiteralSourceCodeLine": "    /// @notice Removes an address as a registered price agent for this price index. Also removes the agent's price report, recalculating the master price.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 12502,
          "OffsetEnd": 12657,
          "Length": 155
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 236,
          "LiteralSourceCodeLine": "    /// @notice Only callable by the contract owner.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 12658,
          "OffsetEnd": 12710,
          "Length": 52
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 237,
          "LiteralSourceCodeLine": "    /// @dev Warning: you cannot remove the LAST valid (has reported a price) price reporting agent.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 12711,
          "OffsetEnd": 12811,
          "Length": 100
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 238,
          "LiteralSourceCodeLine": "    /// @param agentToRemove The address of the price agent to be removed.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 12812,
          "OffsetEnd": 12886,
          "Length": 74
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 239,
          "LiteralSourceCodeLine": "    function removePriceAgent(address agentToRemove) public onlyOwner   {",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 12887,
          "OffsetEnd": 12960,
          "Length": 73
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 240,
          "LiteralSourceCodeLine": "        //require(agentToRemove!=owner()); //cannot remove contract owner (note: this is something that needs to be further discussed)",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 12961,
          "OffsetEnd": 13095,
          "Length": 134
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 241,
          "LiteralSourceCodeLine": "        //require(numberOfRegisteredPriceAgents>1);",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 13096,
          "OffsetEnd": 13147,
          "Length": 51
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 242,
          "LiteralSourceCodeLine": "        //above were previous attempts to prevent a bad state when the last valid agent was deleted, but now it's being done in aggregatePrice",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 13148,
          "OffsetEnd": 13290,
          "Length": 142
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 243,
          "LiteralSourceCodeLine": "        isRegisteredPriceAgent[agentToRemove]=false;",
          "ExecutionCount": 4,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 13291,
          "OffsetEnd": 13343,
          "Length": 52
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 244,
          "LiteralSourceCodeLine": "        ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 13344,
          "OffsetEnd": 13352,
          "Length": 8
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 245,
          "LiteralSourceCodeLine": "        delete PriceAgentReports[agentToRemove];",
          "ExecutionCount": 4,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 13353,
          "OffsetEnd": 13401,
          "Length": 48
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 246,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 13402,
          "OffsetEnd": 13402,
          "Length": 0
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 247,
          "LiteralSourceCodeLine": "        for (uint i=0; i<registeredPriceAgents.length; i=i.add(1)) {",
          "ExecutionCount": 4,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 13403,
          "OffsetEnd": 13471,
          "Length": 68
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 248,
          "LiteralSourceCodeLine": "            if(registeredPriceAgents[i]==agentToRemove){",
          "ExecutionCount": 8,
          "IsCovered": true,
          "BranchState": "both",
          "BranchType": "if_statement",
          "IsBranch": true,
          "Offset": 13472,
          "OffsetEnd": 13528,
          "Length": 56
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 249,
          "LiteralSourceCodeLine": "                delete registeredPriceAgents[i]; //leaves a gap of 0",
          "ExecutionCount": 4,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 13529,
          "OffsetEnd": 13597,
          "Length": 68
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 250,
          "LiteralSourceCodeLine": "            }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 13598,
          "OffsetEnd": 13611,
          "Length": 13
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 251,
          "LiteralSourceCodeLine": "        }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 13612,
          "OffsetEnd": 13621,
          "Length": 9
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 252,
          "LiteralSourceCodeLine": "        ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 13622,
          "OffsetEnd": 13630,
          "Length": 8
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 253,
          "LiteralSourceCodeLine": "        aggregatePrice();",
          "ExecutionCount": 4,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 13631,
          "OffsetEnd": 13656,
          "Length": 25
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 254,
          "LiteralSourceCodeLine": "        numberOfRegisteredPriceAgents=numberOfRegisteredPriceAgents.sub(1);",
          "ExecutionCount": 2,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 13657,
          "OffsetEnd": 13732,
          "Length": 75
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 255,
          "LiteralSourceCodeLine": "        emit changeInPriceAgents(numberOfRegisteredPriceAgents,msg.sender);",
          "ExecutionCount": 2,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 13733,
          "OffsetEnd": 13808,
          "Length": 75
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 256,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 13809,
          "OffsetEnd": 13809,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 257,
          "LiteralSourceCodeLine": "    }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 13810,
          "OffsetEnd": 13815,
          "Length": 5
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 258,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 13816,
          "OffsetEnd": 13816,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 259,
          "LiteralSourceCodeLine": "    struct priceReport {",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 13817,
          "OffsetEnd": 13841,
          "Length": 24
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 260,
          "LiteralSourceCodeLine": "        uint256 price;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 13842,
          "OffsetEnd": 13864,
          "Length": 22
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 261,
          "LiteralSourceCodeLine": "        uint256 timestamp;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 13865,
          "OffsetEnd": 13891,
          "Length": 26
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 262,
          "LiteralSourceCodeLine": "        string source;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 13892,
          "OffsetEnd": 13914,
          "Length": 22
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 263,
          "LiteralSourceCodeLine": "    }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 13915,
          "OffsetEnd": 13920,
          "Length": 5
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 264,
          "LiteralSourceCodeLine": "    ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 13921,
          "OffsetEnd": 13925,
          "Length": 4
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 265,
          "LiteralSourceCodeLine": "    struct FundInfo{",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 13926,
          "OffsetEnd": 13946,
          "Length": 20
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 266,
          "LiteralSourceCodeLine": "        Fund fund;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 13947,
          "OffsetEnd": 13965,
          "Length": 18
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 267,
          "LiteralSourceCodeLine": "        bool endPriceConditionsReached;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 13966,
          "OffsetEnd": 14005,
          "Length": 39
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 268,
          "LiteralSourceCodeLine": "        uint256 endPrice;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 14006,
          "OffsetEnd": 14031,
          "Length": 25
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 269,
          "LiteralSourceCodeLine": "        uint256 strikePrice;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 14032,
          "OffsetEnd": 14060,
          "Length": 28
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 270,
          "LiteralSourceCodeLine": "    }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 14061,
          "OffsetEnd": 14066,
          "Length": 5
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 271,
          "LiteralSourceCodeLine": "    ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 14067,
          "OffsetEnd": 14071,
          "Length": 4
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 272,
          "LiteralSourceCodeLine": "}",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 14072,
          "OffsetEnd": 14073,
          "Length": 1
        }
      ],
      "LineCount": 81,
      "LineCoveredCount": 77,
      "LineCoveragePercent": 95.06,
      "BranchCount": 40,
      "BranchCoveredCount": 36,
      "BranchCoveragePercent": 90.0,
      "FunctionCount": 15,
      "FunctionCoveredCount": 15,
      "FunctionCoveragePercent": 100.0
    }
  ],
  "UnitTestOutcome": [
    [
      {
        "Namespace": "openSourcePriceIndex.PriceIndexTest",
        "TestName": "ValidateRemovingAllValidReportingAgents_unitializedAgent",
        "Passed": true,
        "Duration": "00:00:00.6085120"
      },
      {
        "Namespace": "openSourcePriceIndex.PriceIndexTest",
        "TestName": "ValidateResetFund_notConnectedFund",
        "Passed": true,
        "Duration": "00:00:00.0367250"
      },
      {
        "Namespace": "openSourcePriceIndex.PriceIndexTest",
        "TestName": "ValidateConnectingFundSecurity",
        "Passed": true,
        "Duration": "00:00:00.5035230"
      },
      {
        "Namespace": "openSourcePriceIndex.PriceIndexTest",
        "TestName": "ValidateAddingPriceAgentSecurity",
        "Passed": true,
        "Duration": "00:00:00.5012350"
      },
      {
        "Namespace": "openSourcePriceIndex.PriceIndexTest",
        "TestName": "ValidateRequestForInvalidFund",
        "Passed": true,
        "Duration": "00:00:00.1260920"
      },
      {
        "Namespace": "openSourcePriceIndex.PriceIndexTest",
        "TestName": "ValidatePriceRegistrationUpdateFromInitNoFund",
        "Passed": true,
        "Duration": "00:00:00.1363690"
      },
      {
        "Namespace": "openSourcePriceIndex.PriceIndexTest",
        "TestName": "ValidateAddingDuplicatePriceReportingAgent",
        "Passed": true,
        "Duration": "00:00:00.4901140"
      },
      {
        "Namespace": "openSourcePriceIndex.PriceIndexTest",
        "TestName": "ValidateAddingBeyondMaxPriceReportingAgents",
        "Passed": true,
        "Duration": "00:00:00.4901440"
      },
      {
        "Namespace": "openSourcePriceIndex.PriceIndexTest",
        "TestName": "ValidateConnectingFundNoMax",
        "Passed": true,
        "Duration": "00:00:00.1267660"
      },
      {
        "Namespace": "openSourcePriceIndex.PriceIndexTest",
        "TestName": "ValidateDoublingEventPostConnection",
        "Passed": true,
        "Duration": "00:00:00.0964620"
      },
      {
        "Namespace": "openSourcePriceIndex.PriceIndexTest",
        "TestName": "ValidateDeployment",
        "Passed": true,
        "Duration": "00:00:00.1765970"
      },
      {
        "Namespace": "openSourcePriceIndex.PriceIndexTest",
        "TestName": "ValidateRemovingAllValidReportingAgents_deleteAdmin",
        "Passed": true,
        "Duration": "00:00:00.6036480"
      },
      {
        "Namespace": "openSourcePriceIndex.PriceIndexTest",
        "TestName": "ValidateConnectingFund_decimalMismatch",
        "Passed": true,
        "Duration": "00:00:00.4558590"
      },
      {
        "Namespace": "openSourcePriceIndex.PriceIndexTest",
        "TestName": "ValidateRemovingPriceAgentSecurity",
        "Passed": true,
        "Duration": "00:00:00.5128050"
      },
      {
        "Namespace": "openSourcePriceIndex.PriceIndexTest",
        "TestName": "ValidateAddingReportingAgentInFreeSlot",
        "Passed": true,
        "Duration": "00:00:00.0878630"
      },
      {
        "Namespace": "openSourcePriceIndex.PriceIndexTest",
        "TestName": "ValidateConnectingDuplicateFund",
        "Passed": true,
        "Duration": "00:00:00.4634540"
      },
      {
        "Namespace": "openSourcePriceIndex.PriceIndexTest",
        "TestName": "ValidatehasFundEnded_notAFund",
        "Passed": true,
        "Duration": "00:00:00.3377890"
      },
      {
        "Namespace": "openSourcePriceIndex.PriceIndexTest",
        "TestName": "ValidateGetInvalidReportingAgent",
        "Passed": true,
        "Duration": "00:00:00.1115060"
      },
      {
        "Namespace": "openSourcePriceIndex.PriceIndexTest",
        "TestName": "ValidateDoublingEventUponConnection",
        "Passed": true,
        "Duration": "00:00:00.1267540"
      },
      {
        "Namespace": "openSourcePriceIndex.PriceIndexTest",
        "TestName": "ValidatePriceRegistrationSecurity",
        "Passed": true,
        "Duration": "00:00:00.5162780"
      },
      {
        "Namespace": "openSourcePriceIndex.PriceIndexTest",
        "TestName": "ValidatePriceAveragingNoFund",
        "Passed": true,
        "Duration": "00:00:00.1084550"
      },
      {
        "Namespace": "openSourcePriceIndex.PriceIndexTest",
        "TestName": "ValidateEndAndReturn",
        "Passed": true,
        "Duration": "00:00:00.1218950"
      },
      {
        "Namespace": "openSourcePriceIndex.PriceIndexTest",
        "TestName": "ValidateConnectingFundInEmptySlot",
        "Passed": true,
        "Duration": "00:00:00.1371170"
      },
      {
        "Namespace": "openSourcePriceIndex.PriceIndexTest",
        "TestName": "ValidatePriceRegistrationUpdateEndFromInitNoFund",
        "Passed": true,
        "Duration": "00:00:00.1363780"
      },
      {
        "Namespace": "openSourcePriceIndex.PriceIndexTest",
        "TestName": "ValidateConnectingNullFund",
        "Passed": true,
        "Duration": "00:00:00.5124510"
      },
      {
        "Namespace": "openSourcePriceIndex.PriceIndexTest",
        "TestName": "ValidateRemovingNewReportingAgent",
        "Passed": true,
        "Duration": "00:00:00.1115450"
      },
      {
        "Namespace": "openSourcePriceIndex.PriceIndexTest",
        "TestName": "ValidateAddingNewPriceReportingAgent",
        "Passed": true,
        "Duration": "00:00:00.1356700"
      }
    ]
  ],
  "LineCount": 81,
  "LineCoveredCount": 77,
  "LineCoveragePercent": 95.06,
  "BranchCount": 40,
  "BranchCoveredCount": 36,
  "BranchCoveragePercent": 90.0,
  "FunctionCount": 15,
  "FunctionCoveredCount": 15,
  "FunctionCoveragePercent": 100.0
}