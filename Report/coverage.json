{
  "SolidityCompilerVersion": "0.4.25",
  "SourceFileMaps": [
    {
      "IndexHtmlFilePath": "../index.html",
      "SolidityCompilerVersion": "0.4.25",
      "SourceFileIndex": 2,
      "SourceFilePath": "PriceIndex.sol",
      "SourceFileName": "PriceIndex.sol",
      "SourceFileDirectory": "",
      "SourceHashSha256": "E26ADF748E6F98C17F9528E80A3D98ACBC9DB3B167FE3CC41BED79E86176D457",
      "SourceFileLines": [
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 1,
          "LiteralSourceCodeLine": "/* ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 0,
          "OffsetEnd": 3,
          "Length": 3
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 2,
          "LiteralSourceCodeLine": "Copyright 2019 Novera Capital Inc.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 4,
          "OffsetEnd": 38,
          "Length": 34
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 3,
          "LiteralSourceCodeLine": "Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 39,
          "OffsetEnd": 471,
          "Length": 432
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 4,
          "LiteralSourceCodeLine": "The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 472,
          "OffsetEnd": 598,
          "Length": 126
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 5,
          "LiteralSourceCodeLine": "THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 599,
          "OffsetEnd": 1059,
          "Length": 460
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 6,
          "LiteralSourceCodeLine": "*/",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1060,
          "OffsetEnd": 1062,
          "Length": 2
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 7,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1063,
          "OffsetEnd": 1063,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 8,
          "LiteralSourceCodeLine": "pragma solidity ^0.4.24;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1064,
          "OffsetEnd": 1088,
          "Length": 24
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 9,
          "LiteralSourceCodeLine": "import \"./SafeMath.sol\"; //openzeppelin",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1089,
          "OffsetEnd": 1128,
          "Length": 39
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 10,
          "LiteralSourceCodeLine": "import \"./Ownable.sol\"; //openzeppelin",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1129,
          "OffsetEnd": 1167,
          "Length": 38
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 11,
          "LiteralSourceCodeLine": "import \"./Fund.sol\";",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1168,
          "OffsetEnd": 1188,
          "Length": 20
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 12,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1189,
          "OffsetEnd": 1189,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 13,
          "LiteralSourceCodeLine": "/// @title Novera Price Index",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1190,
          "OffsetEnd": 1219,
          "Length": 29
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 14,
          "LiteralSourceCodeLine": "/// @author Jose Miguel Herrera",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1220,
          "OffsetEnd": 1251,
          "Length": 31
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 15,
          "LiteralSourceCodeLine": "/// @notice You can use this contract to create a price oracle for a financial asset. Prices come from N registered price agents and averaged.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1252,
          "OffsetEnd": 1394,
          "Length": 142
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 16,
          "LiteralSourceCodeLine": "/// @notice You can use this contract independently, or connected to a \"fund\" which reads the price and has an end price, at which the fund ends.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1395,
          "OffsetEnd": 1540,
          "Length": 145
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 17,
          "LiteralSourceCodeLine": "/// @dev With mythX static analysis, you get warning SWC-128 (DoS With Block Gas Limit) due to the looping over connectedFundAddresses in reportPrice(). Since adding new funds is not a user facing function, there is no DoS threat...",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1541,
          "OffsetEnd": 1773,
          "Length": 232
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 18,
          "LiteralSourceCodeLine": "/// @dev ... However, this means that there IS an upper ceiling on how many funds can be connected to one price index.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1774,
          "OffsetEnd": 1892,
          "Length": 118
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 19,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1893,
          "OffsetEnd": 1893,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 20,
          "LiteralSourceCodeLine": "contract PriceIndex is Ownable {    ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1894,
          "OffsetEnd": 1930,
          "Length": 36
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 21,
          "LiteralSourceCodeLine": "   string public baseTicker;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1931,
          "OffsetEnd": 1959,
          "Length": 28
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 22,
          "LiteralSourceCodeLine": "   string public quoteTicker; ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1960,
          "OffsetEnd": 1990,
          "Length": 30
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 23,
          "LiteralSourceCodeLine": "   mapping (address => FundInfo) public funds;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 1991,
          "OffsetEnd": 2037,
          "Length": 46
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 24,
          "LiteralSourceCodeLine": "   address[] internal connectedFundAddresses;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2038,
          "OffsetEnd": 2083,
          "Length": 45
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 25,
          "LiteralSourceCodeLine": "   mapping (address => bool) internal isConnectedFund;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2084,
          "OffsetEnd": 2138,
          "Length": 54
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 26,
          "LiteralSourceCodeLine": "   uint256 public numberOfConnectedFunds;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2139,
          "OffsetEnd": 2180,
          "Length": 41
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 27,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2181,
          "OffsetEnd": 2181,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 28,
          "LiteralSourceCodeLine": "   using SafeMath for uint;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2182,
          "OffsetEnd": 2209,
          "Length": 27
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 29,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2210,
          "OffsetEnd": 2210,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 30,
          "LiteralSourceCodeLine": "   uint256 public masterPrice;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2211,
          "OffsetEnd": 2241,
          "Length": 30
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 31,
          "LiteralSourceCodeLine": "   address[] internal registeredPriceAgents;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2242,
          "OffsetEnd": 2286,
          "Length": 44
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 32,
          "LiteralSourceCodeLine": "   uint256 public numberOfRegisteredPriceAgents;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2287,
          "OffsetEnd": 2335,
          "Length": 48
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 33,
          "LiteralSourceCodeLine": "   uint256 public maxNumberPriceAgents;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2336,
          "OffsetEnd": 2375,
          "Length": 39
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 34,
          "LiteralSourceCodeLine": "   uint8 public decimals;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2376,
          "OffsetEnd": 2401,
          "Length": 25
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 35,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2402,
          "OffsetEnd": 2402,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 36,
          "LiteralSourceCodeLine": "   mapping (address => bool) internal isRegisteredPriceAgent;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2403,
          "OffsetEnd": 2464,
          "Length": 61
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 37,
          "LiteralSourceCodeLine": "   mapping (address => priceReport) public PriceAgentReports;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2465,
          "OffsetEnd": 2526,
          "Length": 61
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 38,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2527,
          "OffsetEnd": 2527,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 39,
          "LiteralSourceCodeLine": "   event LogPriceUpdate(uint256 _newPrice, uint256 timestamp);",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2528,
          "OffsetEnd": 2590,
          "Length": 62
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 40,
          "LiteralSourceCodeLine": "   event changeInPriceAgents(uint _newNumberOfPriceAgents,address changer);",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2591,
          "OffsetEnd": 2666,
          "Length": 75
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 41,
          "LiteralSourceCodeLine": "   event fundEndAlert(uint256 timestamp, uint256 endPrice, address fundAddress);",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2667,
          "OffsetEnd": 2747,
          "Length": 80
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 42,
          "LiteralSourceCodeLine": "   ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2748,
          "OffsetEnd": 2751,
          "Length": 3
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 43,
          "LiteralSourceCodeLine": "    /// @notice Creates a PriceIndex instance.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2752,
          "OffsetEnd": 2798,
          "Length": 46
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 44,
          "LiteralSourceCodeLine": "    /// @dev In the future, both the asset name and the currency used to track it will be included as parameters.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2799,
          "OffsetEnd": 2912,
          "Length": 113
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 45,
          "LiteralSourceCodeLine": "    /// @param initialPrice The initial price of the asset.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2913,
          "OffsetEnd": 2972,
          "Length": 59
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 46,
          "LiteralSourceCodeLine": "    /// @param initialPriceSource Where initialPrice is coming from.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 2973,
          "OffsetEnd": 3041,
          "Length": 68
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 47,
          "LiteralSourceCodeLine": "    /// @param _maxNumberPriceAgents The max nnumber of price agents this price index will allow.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 3042,
          "OffsetEnd": 3139,
          "Length": 97
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 48,
          "LiteralSourceCodeLine": "    /// @param _decimals The decimal precision used to represent the price of the asset. ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 3140,
          "OffsetEnd": 3229,
          "Length": 89
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 49,
          "LiteralSourceCodeLine": "    constructor(uint256 initialPrice, string initialPriceSource, uint _maxNumberPriceAgents,uint8 _decimals, string _baseTicker, string _quoteTicker) public {",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 3230,
          "OffsetEnd": 3388,
          "Length": 158
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 50,
          "LiteralSourceCodeLine": "       numberOfRegisteredPriceAgents=0;",
          "ExecutionCount": 28,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 3389,
          "OffsetEnd": 3428,
          "Length": 39
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 51,
          "LiteralSourceCodeLine": "       maxNumberPriceAgents=_maxNumberPriceAgents;",
          "ExecutionCount": 28,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 3429,
          "OffsetEnd": 3479,
          "Length": 50
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 52,
          "LiteralSourceCodeLine": "       registerPriceAgent(msg.sender);",
          "ExecutionCount": 28,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 3480,
          "OffsetEnd": 3518,
          "Length": 38
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 53,
          "LiteralSourceCodeLine": "       PriceAgentReports[msg.sender]=priceReport(initialPrice,now,initialPriceSource);",
          "ExecutionCount": 28,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 3519,
          "OffsetEnd": 3605,
          "Length": 86
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 54,
          "LiteralSourceCodeLine": "       masterPrice=initialPrice;",
          "ExecutionCount": 28,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 3606,
          "OffsetEnd": 3638,
          "Length": 32
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 55,
          "LiteralSourceCodeLine": "       numberOfConnectedFunds=0;",
          "ExecutionCount": 28,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 3639,
          "OffsetEnd": 3671,
          "Length": 32
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 56,
          "LiteralSourceCodeLine": "       decimals=_decimals;",
          "ExecutionCount": 28,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 3672,
          "OffsetEnd": 3698,
          "Length": 26
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 57,
          "LiteralSourceCodeLine": "       baseTicker=_baseTicker;",
          "ExecutionCount": 28,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 3699,
          "OffsetEnd": 3729,
          "Length": 30
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 58,
          "LiteralSourceCodeLine": "       quoteTicker=_quoteTicker;",
          "ExecutionCount": 28,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 3730,
          "OffsetEnd": 3762,
          "Length": 32
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 59,
          "LiteralSourceCodeLine": "       emit LogPriceUpdate(masterPrice,now);",
          "ExecutionCount": 28,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 3763,
          "OffsetEnd": 3807,
          "Length": 44
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 60,
          "LiteralSourceCodeLine": "    }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 3808,
          "OffsetEnd": 3813,
          "Length": 5
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 61,
          "LiteralSourceCodeLine": "    ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 3814,
          "OffsetEnd": 3818,
          "Length": 4
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 62,
          "LiteralSourceCodeLine": "    /// @notice Connects a Fund to this price index - the fund starts tracking it.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 3819,
          "OffsetEnd": 3901,
          "Length": 82
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 63,
          "LiteralSourceCodeLine": "    /// @notice Only callable by the contract owner.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 3902,
          "OffsetEnd": 3954,
          "Length": 52
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 64,
          "LiteralSourceCodeLine": "    /// @dev Right now there's no way to disconnect a fund, this feature could be added in the future.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 3955,
          "OffsetEnd": 4057,
          "Length": 102
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 65,
          "LiteralSourceCodeLine": "    /// @param fundAddress The address of the fund being created.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 4058,
          "OffsetEnd": 4123,
          "Length": 65
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 66,
          "LiteralSourceCodeLine": "    function connectFund(address fundAddress) public onlyOwner {",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 4124,
          "OffsetEnd": 4188,
          "Length": 64
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 67,
          "LiteralSourceCodeLine": "        require(fundAddress!=0);",
          "ExecutionCount": 12,
          "IsCovered": true,
          "BranchState": "both",
          "BranchType": "require",
          "IsBranch": true,
          "Offset": 4189,
          "OffsetEnd": 4221,
          "Length": 32
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 68,
          "LiteralSourceCodeLine": "        require(!isConnectedFund[fundAddress]);",
          "ExecutionCount": 11,
          "IsCovered": true,
          "BranchState": "both",
          "BranchType": "require",
          "IsBranch": true,
          "Offset": 4222,
          "OffsetEnd": 4269,
          "Length": 47
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 69,
          "LiteralSourceCodeLine": "        require(Fund(fundAddress).decimals()==decimals);",
          "ExecutionCount": 10,
          "IsCovered": true,
          "BranchState": "both",
          "BranchType": "require",
          "IsBranch": true,
          "Offset": 4270,
          "OffsetEnd": 4326,
          "Length": 56
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 70,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 4327,
          "OffsetEnd": 4327,
          "Length": 0
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 71,
          "LiteralSourceCodeLine": "        isConnectedFund[fundAddress]=true;",
          "ExecutionCount": 9,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 4328,
          "OffsetEnd": 4370,
          "Length": 42
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 72,
          "LiteralSourceCodeLine": "        ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 4371,
          "OffsetEnd": 4379,
          "Length": 8
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 73,
          "LiteralSourceCodeLine": "        connectedFundAddresses.push(fundAddress);",
          "ExecutionCount": 9,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 4380,
          "OffsetEnd": 4429,
          "Length": 49
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 74,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 4430,
          "OffsetEnd": 4430,
          "Length": 0
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 75,
          "LiteralSourceCodeLine": "        funds[fundAddress]=FundInfo(Fund(fundAddress),false,0,0);",
          "ExecutionCount": 9,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 4431,
          "OffsetEnd": 4496,
          "Length": 65
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 76,
          "LiteralSourceCodeLine": "        funds[fundAddress].strikePrice=funds[fundAddress].fund.strikePrice();",
          "ExecutionCount": 9,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 4497,
          "OffsetEnd": 4574,
          "Length": 77
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 77,
          "LiteralSourceCodeLine": "        ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 4575,
          "OffsetEnd": 4583,
          "Length": 8
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 78,
          "LiteralSourceCodeLine": "        numberOfConnectedFunds=numberOfConnectedFunds.add(1);",
          "ExecutionCount": 9,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 4584,
          "OffsetEnd": 4645,
          "Length": 61
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 79,
          "LiteralSourceCodeLine": "        ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 4646,
          "OffsetEnd": 4654,
          "Length": 8
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 80,
          "LiteralSourceCodeLine": "        //what if new connected fund here has reached max conditions already??",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 4655,
          "OffsetEnd": 4733,
          "Length": 78
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 81,
          "LiteralSourceCodeLine": "        if(reachedMaxConditions(fundAddress)){",
          "ExecutionCount": 9,
          "IsCovered": true,
          "BranchState": "both",
          "BranchType": "if_statement",
          "IsBranch": true,
          "Offset": 4734,
          "OffsetEnd": 4780,
          "Length": 46
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 82,
          "LiteralSourceCodeLine": "            handleMaxConditionForFund(fundAddress);",
          "ExecutionCount": 1,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 4781,
          "OffsetEnd": 4832,
          "Length": 51
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 83,
          "LiteralSourceCodeLine": "        }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 4833,
          "OffsetEnd": 4842,
          "Length": 9
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 84,
          "LiteralSourceCodeLine": "        ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 4843,
          "OffsetEnd": 4851,
          "Length": 8
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 85,
          "LiteralSourceCodeLine": "    }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 4852,
          "OffsetEnd": 4857,
          "Length": 5
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 86,
          "LiteralSourceCodeLine": "    ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 4858,
          "OffsetEnd": 4862,
          "Length": 4
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 87,
          "LiteralSourceCodeLine": "    /// @notice Retrieves the address of one of the connected funds.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 4863,
          "OffsetEnd": 4931,
          "Length": 68
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 88,
          "LiteralSourceCodeLine": "    /// @param index The index of the Ith connected fund.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 4932,
          "OffsetEnd": 4989,
          "Length": 57
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 89,
          "LiteralSourceCodeLine": "    /// @return The address of the Ith connected fund.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 4990,
          "OffsetEnd": 5044,
          "Length": 54
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 90,
          "LiteralSourceCodeLine": "    function getConnectedFundAddress(uint index) view public returns(address) {",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 5045,
          "OffsetEnd": 5124,
          "Length": 79
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 91,
          "LiteralSourceCodeLine": "        if(numberOfConnectedFunds==0 || index>connectedFundAddresses.length.sub(1)){",
          "ExecutionCount": 4,
          "IsCovered": true,
          "BranchState": "both",
          "BranchType": "if_statement",
          "IsBranch": true,
          "Offset": 5125,
          "OffsetEnd": 5209,
          "Length": 84
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 92,
          "LiteralSourceCodeLine": "            return 0;",
          "ExecutionCount": 2,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 5210,
          "OffsetEnd": 5231,
          "Length": 21
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 93,
          "LiteralSourceCodeLine": "        }else{",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 5232,
          "OffsetEnd": 5246,
          "Length": 14
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 94,
          "LiteralSourceCodeLine": "            return connectedFundAddresses[index];",
          "ExecutionCount": 2,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 5247,
          "OffsetEnd": 5296,
          "Length": 49
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 95,
          "LiteralSourceCodeLine": "        }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 5297,
          "OffsetEnd": 5306,
          "Length": 9
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 96,
          "LiteralSourceCodeLine": "    }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 5307,
          "OffsetEnd": 5312,
          "Length": 5
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 97,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 5313,
          "OffsetEnd": 5313,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 98,
          "LiteralSourceCodeLine": "    /// @notice Retrieves the address of one of the registered price agents.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 5314,
          "OffsetEnd": 5390,
          "Length": 76
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 99,
          "LiteralSourceCodeLine": "    /// @param index The index of the Ith registered agent.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 5391,
          "OffsetEnd": 5450,
          "Length": 59
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 100,
          "LiteralSourceCodeLine": "    /// @return The address of the Ith registered agent.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 5451,
          "OffsetEnd": 5507,
          "Length": 56
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 101,
          "LiteralSourceCodeLine": "    function getRegisteredPriceAgent(uint index) view public returns(address) {",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 5508,
          "OffsetEnd": 5587,
          "Length": 79
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 102,
          "LiteralSourceCodeLine": "        if(numberOfRegisteredPriceAgents==0 || index>registeredPriceAgents.length.sub(1)){",
          "ExecutionCount": 6,
          "IsCovered": true,
          "BranchState": "both",
          "BranchType": "if_statement",
          "IsBranch": true,
          "Offset": 5588,
          "OffsetEnd": 5678,
          "Length": 90
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 103,
          "LiteralSourceCodeLine": "            return 0;",
          "ExecutionCount": 1,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 5679,
          "OffsetEnd": 5700,
          "Length": 21
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 104,
          "LiteralSourceCodeLine": "        }else{",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 5701,
          "OffsetEnd": 5715,
          "Length": 14
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 105,
          "LiteralSourceCodeLine": "            return registeredPriceAgents[index];",
          "ExecutionCount": 5,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 5716,
          "OffsetEnd": 5764,
          "Length": 48
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 106,
          "LiteralSourceCodeLine": "        }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 5765,
          "OffsetEnd": 5774,
          "Length": 9
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 107,
          "LiteralSourceCodeLine": "    }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 5775,
          "OffsetEnd": 5780,
          "Length": 5
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 108,
          "LiteralSourceCodeLine": "    ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 5781,
          "OffsetEnd": 5785,
          "Length": 4
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 109,
          "LiteralSourceCodeLine": "    /// @notice Retrieves the current price of the tracked asset.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 5786,
          "OffsetEnd": 5851,
          "Length": 65
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 110,
          "LiteralSourceCodeLine": "    /// @dev Designed for the use of a Fund contract (external requests), but can be used publically (would be the same as calling masterPrice())",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 5852,
          "OffsetEnd": 5997,
          "Length": 145
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 111,
          "LiteralSourceCodeLine": "    /// @return If called by Fund that has reached its end conditions, then returns the price that cuased the fund to end. Otherwise, returns CURRENT the price of the asset.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 5998,
          "OffsetEnd": 6171,
          "Length": 173
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 112,
          "LiteralSourceCodeLine": "    function getPrice() view public returns(uint256){",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 6172,
          "OffsetEnd": 6225,
          "Length": 53
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 113,
          "LiteralSourceCodeLine": "        //if I have a fund connected that has reached its end conditions, give it end price",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 6226,
          "OffsetEnd": 6317,
          "Length": 91
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 114,
          "LiteralSourceCodeLine": "        if(isConnectedFund[msg.sender] && funds[msg.sender].endPriceConditionsReached ){",
          "ExecutionCount": 19,
          "IsCovered": true,
          "BranchState": "else",
          "BranchType": "if_statement",
          "IsBranch": true,
          "Offset": 6318,
          "OffsetEnd": 6406,
          "Length": 88
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 115,
          "LiteralSourceCodeLine": "            return funds[msg.sender].endPrice;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 6407,
          "OffsetEnd": 6453,
          "Length": 46
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 116,
          "LiteralSourceCodeLine": "        }else{",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 6454,
          "OffsetEnd": 6468,
          "Length": 14
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 117,
          "LiteralSourceCodeLine": "            return masterPrice;",
          "ExecutionCount": 19,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 6469,
          "OffsetEnd": 6500,
          "Length": 31
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 118,
          "LiteralSourceCodeLine": "        }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 6501,
          "OffsetEnd": 6510,
          "Length": 9
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 119,
          "LiteralSourceCodeLine": "    }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 6511,
          "OffsetEnd": 6516,
          "Length": 5
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 120,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 6517,
          "OffsetEnd": 6517,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 121,
          "LiteralSourceCodeLine": "    /// @notice Updates current price of the tracked asset and handles the ending of funds.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 6518,
          "OffsetEnd": 6609,
          "Length": 91
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 122,
          "LiteralSourceCodeLine": "    /// @param reportedPrice The reported price.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 6610,
          "OffsetEnd": 6658,
          "Length": 48
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 123,
          "LiteralSourceCodeLine": "    /// @param reportedPriceSource Where reportedPrice comes from.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 6659,
          "OffsetEnd": 6725,
          "Length": 66
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 124,
          "LiteralSourceCodeLine": "    /// @dev Currently averages the prices, future improvement to moving averages possible.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 6726,
          "OffsetEnd": 6817,
          "Length": 91
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 125,
          "LiteralSourceCodeLine": "    /// @dev Analysis needs to be done on this function to see how gas usage increases with the growth of more connected fund addresses, as it may reach a point of self-inflicted DoS.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 6818,
          "OffsetEnd": 7001,
          "Length": 183
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 126,
          "LiteralSourceCodeLine": "    /// @dev The above is an argument for having the ability to DISCONNECT funds.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 7002,
          "OffsetEnd": 7083,
          "Length": 81
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 127,
          "LiteralSourceCodeLine": "    function reportPrice(uint256 reportedPrice,string reportedPriceSource ) public {",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 7084,
          "OffsetEnd": 7168,
          "Length": 84
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 128,
          "LiteralSourceCodeLine": "        require(isRegisteredPriceAgent[msg.sender]); //needs to be registered price agent",
          "ExecutionCount": 9,
          "IsCovered": true,
          "BranchState": "both",
          "BranchType": "require",
          "IsBranch": true,
          "Offset": 7169,
          "OffsetEnd": 7258,
          "Length": 89
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 129,
          "LiteralSourceCodeLine": "        PriceAgentReports[msg.sender]=priceReport(reportedPrice,now,reportedPriceSource);",
          "ExecutionCount": 8,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 7259,
          "OffsetEnd": 7348,
          "Length": 89
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 130,
          "LiteralSourceCodeLine": "        aggregatePrice();",
          "ExecutionCount": 8,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 7349,
          "OffsetEnd": 7374,
          "Length": 25
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 131,
          "LiteralSourceCodeLine": "        checkAndUpdateFunds();",
          "ExecutionCount": 8,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 7375,
          "OffsetEnd": 7405,
          "Length": 30
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 132,
          "LiteralSourceCodeLine": "    }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 7406,
          "OffsetEnd": 7411,
          "Length": 5
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 133,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 7412,
          "OffsetEnd": 7412,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 134,
          "LiteralSourceCodeLine": "    /// @dev Internal function used to check if the current price, newly updated, causes the end of a fund.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 7413,
          "OffsetEnd": 7520,
          "Length": 107
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 135,
          "LiteralSourceCodeLine": "    /// @param fundAddress The address of the fund that is being checked.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 7521,
          "OffsetEnd": 7594,
          "Length": 73
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 136,
          "LiteralSourceCodeLine": "    /// @return true if the current price has caused the fund to reach its max/end conditions. False otherwise.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 7595,
          "OffsetEnd": 7706,
          "Length": 111
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 137,
          "LiteralSourceCodeLine": "    function reachedMaxConditions(address fundAddress) internal view returns(bool){",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 7707,
          "OffsetEnd": 7790,
          "Length": 83
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 138,
          "LiteralSourceCodeLine": "        require(isConnectedFund[fundAddress]);",
          "ExecutionCount": 11,
          "IsCovered": true,
          "BranchState": "if",
          "BranchType": "require",
          "IsBranch": true,
          "Offset": 7791,
          "OffsetEnd": 7837,
          "Length": 46
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 139,
          "LiteralSourceCodeLine": "        //modified so that price index asks a particular fund if it has reached its custom max conditions.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 7838,
          "OffsetEnd": 7944,
          "Length": 106
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 140,
          "LiteralSourceCodeLine": "        return funds[fundAddress].fund.wouldReachEndConditions(masterPrice);",
          "ExecutionCount": 11,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 7945,
          "OffsetEnd": 8021,
          "Length": 76
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 141,
          "LiteralSourceCodeLine": "    }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 8022,
          "OffsetEnd": 8027,
          "Length": 5
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 142,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 8028,
          "OffsetEnd": 8028,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 143,
          "LiteralSourceCodeLine": "    /// @dev Internal function used to handle when a price update causes the end of a fund.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 8029,
          "OffsetEnd": 8120,
          "Length": 91
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 144,
          "LiteralSourceCodeLine": "    /// @param fundAddress The address of the fund that has ended due to a price update",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 8121,
          "OffsetEnd": 8208,
          "Length": 87
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 145,
          "LiteralSourceCodeLine": "    function handleMaxConditionForFund(address fundAddress) internal{",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 8209,
          "OffsetEnd": 8278,
          "Length": 69
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 146,
          "LiteralSourceCodeLine": "        emit fundEndAlert(now,masterPrice,fundAddress);",
          "ExecutionCount": 3,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 8279,
          "OffsetEnd": 8334,
          "Length": 55
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 147,
          "LiteralSourceCodeLine": "        funds[fundAddress].endPriceConditionsReached=true;",
          "ExecutionCount": 3,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 8335,
          "OffsetEnd": 8393,
          "Length": 58
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 148,
          "LiteralSourceCodeLine": "        funds[fundAddress].endPrice=masterPrice;",
          "ExecutionCount": 3,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 8394,
          "OffsetEnd": 8442,
          "Length": 48
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 149,
          "LiteralSourceCodeLine": "    }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 8443,
          "OffsetEnd": 8448,
          "Length": 5
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 150,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 8449,
          "OffsetEnd": 8449,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 151,
          "LiteralSourceCodeLine": "    /// @notice Checks if a connected fund has ended.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 8450,
          "OffsetEnd": 8503,
          "Length": 53
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 152,
          "LiteralSourceCodeLine": "    /// @param fundAddress The address of the fund that is going to be checked.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 8504,
          "OffsetEnd": 8583,
          "Length": 79
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 153,
          "LiteralSourceCodeLine": "    /// @return true if the fund has ended. false otherwise.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 8584,
          "OffsetEnd": 8644,
          "Length": 60
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 154,
          "LiteralSourceCodeLine": "    function hasFundEnded(address fundAddress) public view returns(bool){",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 8645,
          "OffsetEnd": 8718,
          "Length": 73
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 155,
          "LiteralSourceCodeLine": "        require(isConnectedFund[fundAddress]);",
          "ExecutionCount": 11,
          "IsCovered": true,
          "BranchState": "both",
          "BranchType": "require",
          "IsBranch": true,
          "Offset": 8719,
          "OffsetEnd": 8765,
          "Length": 46
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 156,
          "LiteralSourceCodeLine": "        return funds[fundAddress].endPriceConditionsReached;",
          "ExecutionCount": 10,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 8766,
          "OffsetEnd": 8826,
          "Length": 60
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 157,
          "LiteralSourceCodeLine": "    }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 8827,
          "OffsetEnd": 8832,
          "Length": 5
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 158,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 8833,
          "OffsetEnd": 8833,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 159,
          "LiteralSourceCodeLine": "    /// @notice Retrieves the price that caused a fund to end.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 8834,
          "OffsetEnd": 8896,
          "Length": 62
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 160,
          "LiteralSourceCodeLine": "    /// @param fundAddress The address of the fund that ended.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 8897,
          "OffsetEnd": 8959,
          "Length": 62
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 161,
          "LiteralSourceCodeLine": "    /// @return the price that caused the fund to end.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 8960,
          "OffsetEnd": 9014,
          "Length": 54
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 162,
          "LiteralSourceCodeLine": "    function getEndPrice(address fundAddress) public view returns(uint256){",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 9015,
          "OffsetEnd": 9090,
          "Length": 75
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 163,
          "LiteralSourceCodeLine": "        require(hasFundEnded(fundAddress));",
          "ExecutionCount": 1,
          "IsCovered": true,
          "BranchState": "if",
          "BranchType": "require",
          "IsBranch": true,
          "Offset": 9091,
          "OffsetEnd": 9134,
          "Length": 43
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 164,
          "LiteralSourceCodeLine": "        return funds[fundAddress].endPrice;",
          "ExecutionCount": 1,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 9135,
          "OffsetEnd": 9178,
          "Length": 43
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 165,
          "LiteralSourceCodeLine": "    }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 9179,
          "OffsetEnd": 9184,
          "Length": 5
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 166,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 9185,
          "OffsetEnd": 9185,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 167,
          "LiteralSourceCodeLine": "    /// @dev Only callable by a Fund contract (external request) that has reached its end conditions/has ended.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 9186,
          "OffsetEnd": 9297,
          "Length": 111
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 168,
          "LiteralSourceCodeLine": "    /// @dev Resets the end status of a fun and retreives the new strike price.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 9298,
          "OffsetEnd": 9377,
          "Length": 79
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 169,
          "LiteralSourceCodeLine": "    function resetFundStatus() public {",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 9378,
          "OffsetEnd": 9417,
          "Length": 39
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 170,
          "LiteralSourceCodeLine": "        require(isConnectedFund[msg.sender] && funds[msg.sender].endPriceConditionsReached);",
          "ExecutionCount": 1,
          "IsCovered": true,
          "BranchState": "else",
          "BranchType": "require",
          "IsBranch": true,
          "Offset": 9418,
          "OffsetEnd": 9510,
          "Length": 92
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 171,
          "LiteralSourceCodeLine": "        funds[msg.sender].endPriceConditionsReached=false;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 9511,
          "OffsetEnd": 9569,
          "Length": 58
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 172,
          "LiteralSourceCodeLine": "        funds[msg.sender].endPrice=0;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 9570,
          "OffsetEnd": 9607,
          "Length": 37
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 173,
          "LiteralSourceCodeLine": "        funds[msg.sender].strikePrice=funds[msg.sender].fund.strikePrice();",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 9608,
          "OffsetEnd": 9683,
          "Length": 75
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 174,
          "LiteralSourceCodeLine": "    }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 9684,
          "OffsetEnd": 9689,
          "Length": 5
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 175,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 9690,
          "OffsetEnd": 9690,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 176,
          "LiteralSourceCodeLine": "    /// @dev Internal function that retrieves all current price reports and averages them, updating the master price.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 9691,
          "OffsetEnd": 9808,
          "Length": 117
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 177,
          "LiteralSourceCodeLine": "    /// @dev This is where moving average functionality could be added instead of simple averaging.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 9809,
          "OffsetEnd": 9908,
          "Length": 99
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 178,
          "LiteralSourceCodeLine": "    /// @dev Warning: does not work if there are no valid (have reported a price) reports/agents. This is enforced in the removal of agents.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 9909,
          "OffsetEnd": 10049,
          "Length": 140
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 179,
          "LiteralSourceCodeLine": "    function aggregatePrice() private {",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 10050,
          "OffsetEnd": 10089,
          "Length": 39
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 180,
          "LiteralSourceCodeLine": "        uint256 aggPrice=0;",
          "ExecutionCount": 12,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 10090,
          "OffsetEnd": 10117,
          "Length": 27
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 181,
          "LiteralSourceCodeLine": "        uint256 numValidPrices=0;",
          "ExecutionCount": 12,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 10118,
          "OffsetEnd": 10151,
          "Length": 33
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 182,
          "LiteralSourceCodeLine": "        ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 10152,
          "OffsetEnd": 10160,
          "Length": 8
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 183,
          "LiteralSourceCodeLine": "        for (uint i=0; i<registeredPriceAgents.length; i=i.add(1)) {",
          "ExecutionCount": 12,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 10161,
          "OffsetEnd": 10229,
          "Length": 68
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 184,
          "LiteralSourceCodeLine": "            if(registeredPriceAgents[i]!=0 && PriceAgentReports[registeredPriceAgents[i]].timestamp!=0){",
          "ExecutionCount": 20,
          "IsCovered": true,
          "BranchState": "both",
          "BranchType": "if_statement",
          "IsBranch": true,
          "Offset": 10230,
          "OffsetEnd": 10334,
          "Length": 104
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 185,
          "LiteralSourceCodeLine": "                numValidPrices=numValidPrices.add(1);",
          "ExecutionCount": 13,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 10335,
          "OffsetEnd": 10388,
          "Length": 53
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 186,
          "LiteralSourceCodeLine": "                aggPrice=aggPrice.add(PriceAgentReports[registeredPriceAgents[i]].price);",
          "ExecutionCount": 13,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 10389,
          "OffsetEnd": 10478,
          "Length": 89
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 187,
          "LiteralSourceCodeLine": "            }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 10479,
          "OffsetEnd": 10492,
          "Length": 13
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 188,
          "LiteralSourceCodeLine": "        }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 10493,
          "OffsetEnd": 10502,
          "Length": 9
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 189,
          "LiteralSourceCodeLine": "        ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 10503,
          "OffsetEnd": 10511,
          "Length": 8
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 190,
          "LiteralSourceCodeLine": "        if(numValidPrices==0){ //THIS SHOULD NEVER HAPPEN, AND IS GUARANTEED BY THE REMOVE PRICE AGENT FUNC, THERE SHALL BE ALWAYS 1 AGENT",
          "ExecutionCount": 12,
          "IsCovered": true,
          "BranchState": "both",
          "BranchType": "if_statement",
          "IsBranch": true,
          "Offset": 10512,
          "OffsetEnd": 10650,
          "Length": 138
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 191,
          "LiteralSourceCodeLine": "            revert(\"Price cannot be aggregated because there are no valid prices.\");",
          "ExecutionCount": 2,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 10651,
          "OffsetEnd": 10735,
          "Length": 84
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 192,
          "LiteralSourceCodeLine": "        }else{",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 10736,
          "OffsetEnd": 10750,
          "Length": 14
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 193,
          "LiteralSourceCodeLine": "            aggPrice = aggPrice.div(numValidPrices);",
          "ExecutionCount": 10,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 10751,
          "OffsetEnd": 10803,
          "Length": 52
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 194,
          "LiteralSourceCodeLine": "        }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 10804,
          "OffsetEnd": 10813,
          "Length": 9
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 195,
          "LiteralSourceCodeLine": "        ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 10814,
          "OffsetEnd": 10822,
          "Length": 8
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 196,
          "LiteralSourceCodeLine": "        emit LogPriceUpdate(aggPrice,now);",
          "ExecutionCount": 10,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 10823,
          "OffsetEnd": 10865,
          "Length": 42
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 197,
          "LiteralSourceCodeLine": "        masterPrice=aggPrice;",
          "ExecutionCount": 10,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 10866,
          "OffsetEnd": 10895,
          "Length": 29
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 198,
          "LiteralSourceCodeLine": "    }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 10896,
          "OffsetEnd": 10901,
          "Length": 5
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 199,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 10902,
          "OffsetEnd": 10902,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 200,
          "LiteralSourceCodeLine": "    /// @dev Internal function that checks if the previous price update would end a fund, and triggers the end process ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 10903,
          "OffsetEnd": 11022,
          "Length": 119
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 201,
          "LiteralSourceCodeLine": "    function checkAndUpdateFunds() private {",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 11023,
          "OffsetEnd": 11067,
          "Length": 44
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 202,
          "LiteralSourceCodeLine": "        for (uint i=0; i<connectedFundAddresses.length; i=i.add(1)) {",
          "ExecutionCount": 8,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 11068,
          "OffsetEnd": 11137,
          "Length": 69
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 203,
          "LiteralSourceCodeLine": "            if(isConnectedFund[connectedFundAddresses[i]] && !hasFundEnded(connectedFundAddresses[i]) && reachedMaxConditions(connectedFundAddresses[i])){",
          "ExecutionCount": 3,
          "IsCovered": true,
          "BranchState": "both",
          "BranchType": "if_statement",
          "IsBranch": true,
          "Offset": 11138,
          "OffsetEnd": 11292,
          "Length": 154
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 204,
          "LiteralSourceCodeLine": "                handleMaxConditionForFund(connectedFundAddresses[i]);",
          "ExecutionCount": 2,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 11293,
          "OffsetEnd": 11362,
          "Length": 69
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 205,
          "LiteralSourceCodeLine": "            }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 11363,
          "OffsetEnd": 11376,
          "Length": 13
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 206,
          "LiteralSourceCodeLine": "        }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 11377,
          "OffsetEnd": 11386,
          "Length": 9
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 207,
          "LiteralSourceCodeLine": "    }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 11387,
          "OffsetEnd": 11392,
          "Length": 5
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 208,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 11393,
          "OffsetEnd": 11393,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 209,
          "LiteralSourceCodeLine": "    /// @notice Registers an address as a registered price agent for this price index.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 11394,
          "OffsetEnd": 11480,
          "Length": 86
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 210,
          "LiteralSourceCodeLine": "    /// @notice Only callable by the contract owner.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 11481,
          "OffsetEnd": 11533,
          "Length": 52
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 211,
          "LiteralSourceCodeLine": "    /// @param newAgent The address of the price agent to be registered.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 11534,
          "OffsetEnd": 11606,
          "Length": 72
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 212,
          "LiteralSourceCodeLine": "    function registerPriceAgent(address newAgent) public onlyOwner  {",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 11607,
          "OffsetEnd": 11676,
          "Length": 69
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 213,
          "LiteralSourceCodeLine": "        require(!isRegisteredPriceAgent[newAgent]); //prevent double registrations",
          "ExecutionCount": 42,
          "IsCovered": true,
          "BranchState": "both",
          "BranchType": "require",
          "IsBranch": true,
          "Offset": 11677,
          "OffsetEnd": 11759,
          "Length": 82
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 214,
          "LiteralSourceCodeLine": "        require(numberOfRegisteredPriceAgents<maxNumberPriceAgents); //no more than max",
          "ExecutionCount": 41,
          "IsCovered": true,
          "BranchState": "both",
          "BranchType": "require",
          "IsBranch": true,
          "Offset": 11760,
          "OffsetEnd": 11847,
          "Length": 87
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 215,
          "LiteralSourceCodeLine": "        isRegisteredPriceAgent[newAgent]=true;",
          "ExecutionCount": 40,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 11848,
          "OffsetEnd": 11894,
          "Length": 46
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 216,
          "LiteralSourceCodeLine": "        bool foundEmptySlot=false;",
          "ExecutionCount": 40,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 11895,
          "OffsetEnd": 11929,
          "Length": 34
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 217,
          "LiteralSourceCodeLine": "        ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 11930,
          "OffsetEnd": 11938,
          "Length": 8
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 218,
          "LiteralSourceCodeLine": "        for (uint i=0; i<registeredPriceAgents.length; i=i.add(1)) {",
          "ExecutionCount": 40,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 11939,
          "OffsetEnd": 12007,
          "Length": 68
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 219,
          "LiteralSourceCodeLine": "            if(registeredPriceAgents[i]==0){",
          "ExecutionCount": 18,
          "IsCovered": true,
          "BranchState": "both",
          "BranchType": "if_statement",
          "IsBranch": true,
          "Offset": 12008,
          "OffsetEnd": 12052,
          "Length": 44
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 220,
          "LiteralSourceCodeLine": "               registeredPriceAgents[i]=newAgent; //add agent in first free slot   ",
          "ExecutionCount": 1,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 12053,
          "OffsetEnd": 12136,
          "Length": 83
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 221,
          "LiteralSourceCodeLine": "               foundEmptySlot=true;",
          "ExecutionCount": 1,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 12137,
          "OffsetEnd": 12172,
          "Length": 35
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 222,
          "LiteralSourceCodeLine": "               break;",
          "ExecutionCount": 1,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 12173,
          "OffsetEnd": 12194,
          "Length": 21
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 223,
          "LiteralSourceCodeLine": "            }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 12195,
          "OffsetEnd": 12208,
          "Length": 13
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 224,
          "LiteralSourceCodeLine": "        }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 12209,
          "OffsetEnd": 12218,
          "Length": 9
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 225,
          "LiteralSourceCodeLine": "        ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 12219,
          "OffsetEnd": 12227,
          "Length": 8
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 226,
          "LiteralSourceCodeLine": "        if(!foundEmptySlot){",
          "ExecutionCount": 40,
          "IsCovered": true,
          "BranchState": "both",
          "BranchType": "if_statement",
          "IsBranch": true,
          "Offset": 12228,
          "OffsetEnd": 12256,
          "Length": 28
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 227,
          "LiteralSourceCodeLine": "            registeredPriceAgents.push(newAgent);",
          "ExecutionCount": 39,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 12257,
          "OffsetEnd": 12306,
          "Length": 49
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 228,
          "LiteralSourceCodeLine": "        }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 12307,
          "OffsetEnd": 12316,
          "Length": 9
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 229,
          "LiteralSourceCodeLine": "        ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 12317,
          "OffsetEnd": 12325,
          "Length": 8
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 230,
          "LiteralSourceCodeLine": "        ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 12326,
          "OffsetEnd": 12334,
          "Length": 8
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 231,
          "LiteralSourceCodeLine": "        numberOfRegisteredPriceAgents=numberOfRegisteredPriceAgents.add(1);",
          "ExecutionCount": 40,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 12335,
          "OffsetEnd": 12410,
          "Length": 75
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 232,
          "LiteralSourceCodeLine": "        emit changeInPriceAgents(numberOfRegisteredPriceAgents,msg.sender);",
          "ExecutionCount": 40,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 12411,
          "OffsetEnd": 12486,
          "Length": 75
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 233,
          "LiteralSourceCodeLine": "    }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 12487,
          "OffsetEnd": 12492,
          "Length": 5
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 234,
          "LiteralSourceCodeLine": "    ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 12493,
          "OffsetEnd": 12497,
          "Length": 4
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 235,
          "LiteralSourceCodeLine": "    /// @notice Removes an address as a registered price agent for this price index. Also removes the agent's price report, recalculating the master price.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 12498,
          "OffsetEnd": 12653,
          "Length": 155
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 236,
          "LiteralSourceCodeLine": "    /// @notice Only callable by the contract owner.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 12654,
          "OffsetEnd": 12706,
          "Length": 52
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 237,
          "LiteralSourceCodeLine": "    /// @dev Warning: you cannot remove the LAST valid (has reported a price) price reporting agent.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 12707,
          "OffsetEnd": 12807,
          "Length": 100
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 238,
          "LiteralSourceCodeLine": "    /// @param agentToRemove The address of the price agent to be removed.",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 12808,
          "OffsetEnd": 12882,
          "Length": 74
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 239,
          "LiteralSourceCodeLine": "    function removePriceAgent(address agentToRemove) public onlyOwner   {",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 12883,
          "OffsetEnd": 12956,
          "Length": 73
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 240,
          "LiteralSourceCodeLine": "        //require(agentToRemove!=owner()); //cannot remove contract owner (note: this is something that needs to be further discussed)",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 12957,
          "OffsetEnd": 13091,
          "Length": 134
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 241,
          "LiteralSourceCodeLine": "        //require(numberOfRegisteredPriceAgents>1);",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 13092,
          "OffsetEnd": 13143,
          "Length": 51
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 242,
          "LiteralSourceCodeLine": "        //above were previous attempts to prevent a bad state when the last valid agent was deleted, but now it's being done in aggregatePrice",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 13144,
          "OffsetEnd": 13286,
          "Length": 142
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 243,
          "LiteralSourceCodeLine": "        isRegisteredPriceAgent[agentToRemove]=false;",
          "ExecutionCount": 4,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 13287,
          "OffsetEnd": 13339,
          "Length": 52
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 244,
          "LiteralSourceCodeLine": "        ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 13340,
          "OffsetEnd": 13348,
          "Length": 8
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 245,
          "LiteralSourceCodeLine": "        delete PriceAgentReports[agentToRemove];",
          "ExecutionCount": 4,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 13349,
          "OffsetEnd": 13397,
          "Length": 48
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 246,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 13398,
          "OffsetEnd": 13398,
          "Length": 0
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 247,
          "LiteralSourceCodeLine": "        for (uint i=0; i<registeredPriceAgents.length; i=i.add(1)) {",
          "ExecutionCount": 4,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 13399,
          "OffsetEnd": 13467,
          "Length": 68
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 248,
          "LiteralSourceCodeLine": "            if(registeredPriceAgents[i]==agentToRemove){",
          "ExecutionCount": 8,
          "IsCovered": true,
          "BranchState": "both",
          "BranchType": "if_statement",
          "IsBranch": true,
          "Offset": 13468,
          "OffsetEnd": 13524,
          "Length": 56
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 249,
          "LiteralSourceCodeLine": "                delete registeredPriceAgents[i]; //leaves a gap of 0",
          "ExecutionCount": 4,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 13525,
          "OffsetEnd": 13593,
          "Length": 68
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 250,
          "LiteralSourceCodeLine": "            }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 13594,
          "OffsetEnd": 13607,
          "Length": 13
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 251,
          "LiteralSourceCodeLine": "        }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 13608,
          "OffsetEnd": 13617,
          "Length": 9
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 252,
          "LiteralSourceCodeLine": "        ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 13618,
          "OffsetEnd": 13626,
          "Length": 8
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 253,
          "LiteralSourceCodeLine": "        aggregatePrice();",
          "ExecutionCount": 4,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 13627,
          "OffsetEnd": 13652,
          "Length": 25
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 254,
          "LiteralSourceCodeLine": "        numberOfRegisteredPriceAgents=numberOfRegisteredPriceAgents.sub(1);",
          "ExecutionCount": 2,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 13653,
          "OffsetEnd": 13728,
          "Length": 75
        },
        {
          "IsActive": true,
          "IsUnreachable": false,
          "LineNumber": 255,
          "LiteralSourceCodeLine": "        emit changeInPriceAgents(numberOfRegisteredPriceAgents,msg.sender);",
          "ExecutionCount": 2,
          "IsCovered": true,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 13729,
          "OffsetEnd": 13804,
          "Length": 75
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 256,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 13805,
          "OffsetEnd": 13805,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 257,
          "LiteralSourceCodeLine": "    }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 13806,
          "OffsetEnd": 13811,
          "Length": 5
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 258,
          "LiteralSourceCodeLine": "",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 13812,
          "OffsetEnd": 13812,
          "Length": 0
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 259,
          "LiteralSourceCodeLine": "    struct priceReport {",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 13813,
          "OffsetEnd": 13837,
          "Length": 24
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 260,
          "LiteralSourceCodeLine": "        uint256 price;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 13838,
          "OffsetEnd": 13860,
          "Length": 22
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 261,
          "LiteralSourceCodeLine": "        uint256 timestamp;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 13861,
          "OffsetEnd": 13887,
          "Length": 26
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 262,
          "LiteralSourceCodeLine": "        string source;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 13888,
          "OffsetEnd": 13910,
          "Length": 22
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 263,
          "LiteralSourceCodeLine": "    }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 13911,
          "OffsetEnd": 13916,
          "Length": 5
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 264,
          "LiteralSourceCodeLine": "    ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 13917,
          "OffsetEnd": 13921,
          "Length": 4
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 265,
          "LiteralSourceCodeLine": "    struct FundInfo{",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 13922,
          "OffsetEnd": 13942,
          "Length": 20
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 266,
          "LiteralSourceCodeLine": "        Fund fund;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 13943,
          "OffsetEnd": 13961,
          "Length": 18
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 267,
          "LiteralSourceCodeLine": "        bool endPriceConditionsReached;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 13962,
          "OffsetEnd": 14001,
          "Length": 39
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 268,
          "LiteralSourceCodeLine": "        uint256 endPrice;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 14002,
          "OffsetEnd": 14027,
          "Length": 25
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 269,
          "LiteralSourceCodeLine": "        uint256 strikePrice;",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 14028,
          "OffsetEnd": 14056,
          "Length": 28
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 270,
          "LiteralSourceCodeLine": "    }",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 14057,
          "OffsetEnd": 14062,
          "Length": 5
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 271,
          "LiteralSourceCodeLine": "    ",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 14063,
          "OffsetEnd": 14067,
          "Length": 4
        },
        {
          "IsActive": false,
          "IsUnreachable": false,
          "LineNumber": 272,
          "LiteralSourceCodeLine": "}",
          "ExecutionCount": 0,
          "IsCovered": false,
          "BranchState": "none",
          "IsBranch": false,
          "Offset": 14068,
          "OffsetEnd": 14069,
          "Length": 1
        }
      ],
      "LineCount": 81,
      "LineCoveredCount": 77,
      "LineCoveragePercent": 95.06,
      "BranchCount": 40,
      "BranchCoveredCount": 36,
      "BranchCoveragePercent": 90.0,
      "FunctionCount": 15,
      "FunctionCoveredCount": 15,
      "FunctionCoveragePercent": 100.0
    }
  ],
  "UnitTestOutcome": [
    [
      {
        "Namespace": "openSourcePriceIndex.PriceIndexTest",
        "TestName": "ValidateAddingPriceAgentSecurity",
        "Passed": true,
        "Duration": "00:00:00.5561450"
      },
      {
        "Namespace": "openSourcePriceIndex.PriceIndexTest",
        "TestName": "ValidateAddingDuplicatePriceReportingAgent",
        "Passed": true,
        "Duration": "00:00:00.5594450"
      },
      {
        "Namespace": "openSourcePriceIndex.PriceIndexTest",
        "TestName": "ValidateConnectingFundSecurity",
        "Passed": true,
        "Duration": "00:00:00.5590620"
      },
      {
        "Namespace": "openSourcePriceIndex.PriceIndexTest",
        "TestName": "ValidateRemovingPriceAgentSecurity",
        "Passed": true,
        "Duration": "00:00:00.5594220"
      },
      {
        "Namespace": "openSourcePriceIndex.PriceIndexTest",
        "TestName": "ValidateRemovingAllValidReportingAgents_unitializedAgent",
        "Passed": true,
        "Duration": "00:00:00.6659590"
      },
      {
        "Namespace": "openSourcePriceIndex.PriceIndexTest",
        "TestName": "ValidateResetFund_notConnectedFund",
        "Passed": true,
        "Duration": "00:00:00.0346810"
      },
      {
        "Namespace": "openSourcePriceIndex.PriceIndexTest",
        "TestName": "ValidateConnectingFund_decimalMismatch",
        "Passed": true,
        "Duration": "00:00:00.4854360"
      },
      {
        "Namespace": "openSourcePriceIndex.PriceIndexTest",
        "TestName": "ValidateConnectingDuplicateFund",
        "Passed": true,
        "Duration": "00:00:00.5677340"
      },
      {
        "Namespace": "openSourcePriceIndex.PriceIndexTest",
        "TestName": "ValidateConnectingNullFund",
        "Passed": true,
        "Duration": "00:00:00.5640490"
      },
      {
        "Namespace": "openSourcePriceIndex.PriceIndexTest",
        "TestName": "ValidatePriceRegistrationSecurity",
        "Passed": true,
        "Duration": "00:00:00.5570980"
      },
      {
        "Namespace": "openSourcePriceIndex.PriceIndexTest",
        "TestName": "ValidatehasFundEnded_notAFund",
        "Passed": true,
        "Duration": "00:00:00.4058070"
      },
      {
        "Namespace": "openSourcePriceIndex.PriceIndexTest",
        "TestName": "ValidateAddingBeyondMaxPriceReportingAgents",
        "Passed": true,
        "Duration": "00:00:00.5585710"
      },
      {
        "Namespace": "openSourcePriceIndex.PriceIndexTest",
        "TestName": "ValidateEndAndReturn",
        "Passed": true,
        "Duration": "00:00:00.1541990"
      },
      {
        "Namespace": "openSourcePriceIndex.PriceIndexTest",
        "TestName": "ValidateDoublingEventPostConnection",
        "Passed": true,
        "Duration": "00:00:00.1319920"
      },
      {
        "Namespace": "openSourcePriceIndex.PriceIndexTest",
        "TestName": "ValidateAddingReportingAgentInFreeSlot",
        "Passed": true,
        "Duration": "00:00:00.1201170"
      },
      {
        "Namespace": "openSourcePriceIndex.PriceIndexTest",
        "TestName": "ValidateConnectingFundInEmptySlot",
        "Passed": true,
        "Duration": "00:00:00.1571370"
      },
      {
        "Namespace": "openSourcePriceIndex.PriceIndexTest",
        "TestName": "ValidateDoublingEventUponConnection",
        "Passed": true,
        "Duration": "00:00:00.1548620"
      },
      {
        "Namespace": "openSourcePriceIndex.PriceIndexTest",
        "TestName": "ValidateRemovingAllValidReportingAgents_deleteAdmin",
        "Passed": true,
        "Duration": "00:00:00.6786560"
      },
      {
        "Namespace": "openSourcePriceIndex.PriceIndexTest",
        "TestName": "ValidatePriceRegistrationUpdateEndFromInitNoFund",
        "Passed": true,
        "Duration": "00:00:00.1454730"
      },
      {
        "Namespace": "openSourcePriceIndex.PriceIndexTest",
        "TestName": "ValidateConnectingFundNoMax",
        "Passed": true,
        "Duration": "00:00:00.1548550"
      },
      {
        "Namespace": "openSourcePriceIndex.PriceIndexTest",
        "TestName": "ValidateRequestForInvalidFund",
        "Passed": true,
        "Duration": "00:00:00.1295590"
      },
      {
        "Namespace": "openSourcePriceIndex.PriceIndexTest",
        "TestName": "ValidatePriceRegistrationUpdateFromInitNoFund",
        "Passed": true,
        "Duration": "00:00:00.1454880"
      },
      {
        "Namespace": "openSourcePriceIndex.PriceIndexTest",
        "TestName": "ValidateRemovingNewReportingAgent",
        "Passed": true,
        "Duration": "00:00:00.0307610"
      },
      {
        "Namespace": "openSourcePriceIndex.PriceIndexTest",
        "TestName": "ValidateAddingNewPriceReportingAgent",
        "Passed": true,
        "Duration": "00:00:00.1448780"
      },
      {
        "Namespace": "openSourcePriceIndex.PriceIndexTest",
        "TestName": "ValidatePriceAveragingNoFund",
        "Passed": true,
        "Duration": "00:00:00.1228550"
      },
      {
        "Namespace": "openSourcePriceIndex.PriceIndexTest",
        "TestName": "ValidateDeployment",
        "Passed": false,
        "Duration": "00:00:00.2740350"
      },
      {
        "Namespace": "openSourcePriceIndex.PriceIndexTest",
        "TestName": "ValidateGetInvalidReportingAgent",
        "Passed": true,
        "Duration": "00:00:00.0938040"
      }
    ]
  ],
  "LineCount": 81,
  "LineCoveredCount": 77,
  "LineCoveragePercent": 95.06,
  "BranchCount": 40,
  "BranchCoveredCount": 36,
  "BranchCoveragePercent": 90.0,
  "FunctionCount": 15,
  "FunctionCoveredCount": 15,
  "FunctionCoveragePercent": 100.0
}